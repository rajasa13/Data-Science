2024-07-18 06:06:05,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:06:05,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:06:05,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:06:05,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:22:17,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:22:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:22:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 06:22:17,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 07:18:53,007:INFO:PyCaret ClassificationExperiment
2024-07-18 07:18:53,007:INFO:Logging name: clf-default-name
2024-07-18 07:18:53,007:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-18 07:18:53,007:INFO:version 3.3.2
2024-07-18 07:18:53,007:INFO:Initializing setup()
2024-07-18 07:18:53,007:INFO:self.USI: 01b8
2024-07-18 07:18:53,007:INFO:self._variable_keys: {'X', 'exp_name_log', 'fix_imbalance', 'gpu_param', 'n_jobs_param', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'target_param', 'X_train', 'y_test', 'data', 'memory', '_available_plots', 'fold_shuffle_param', 'idx', 'exp_id', 'USI', 'X_test', 'is_multiclass', '_ml_usecase', 'fold_groups_param', 'fold_generator', 'logging_param', 'html_param', 'y', 'y_train', 'seed'}
2024-07-18 07:18:53,007:INFO:Checking environment
2024-07-18 07:18:53,007:INFO:python_version: 3.11.9
2024-07-18 07:18:53,007:INFO:python_build: ('main', 'Apr 19 2024 16:40:41')
2024-07-18 07:18:53,007:INFO:machine: AMD64
2024-07-18 07:18:53,008:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-18 07:18:53,011:INFO:Memory: svmem(total=17114869760, available=9393152000, percent=45.1, used=7721717760, free=9393152000)
2024-07-18 07:18:53,012:INFO:Physical Core: 4
2024-07-18 07:18:53,012:INFO:Logical Core: 8
2024-07-18 07:18:53,012:INFO:Checking libraries
2024-07-18 07:18:53,012:INFO:System:
2024-07-18 07:18:53,012:INFO:    python: 3.11.9 | packaged by Anaconda, Inc. | (main, Apr 19 2024, 16:40:41) [MSC v.1916 64 bit (AMD64)]
2024-07-18 07:18:53,012:INFO:executable: c:\Users\Rajasa\miniconda3\envs\env1\python.exe
2024-07-18 07:18:53,012:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-18 07:18:53,012:INFO:PyCaret required dependencies:
2024-07-18 07:18:54,183:INFO:                 pip: 24.0
2024-07-18 07:18:54,183:INFO:          setuptools: 69.5.1
2024-07-18 07:18:54,183:INFO:             pycaret: 3.3.2
2024-07-18 07:18:54,183:INFO:             IPython: 8.25.0
2024-07-18 07:18:54,183:INFO:          ipywidgets: 8.1.3
2024-07-18 07:18:54,183:INFO:                tqdm: 4.66.4
2024-07-18 07:18:54,183:INFO:               numpy: 1.26.4
2024-07-18 07:18:54,183:INFO:              pandas: 2.1.4
2024-07-18 07:18:54,183:INFO:              jinja2: 3.1.4
2024-07-18 07:18:54,183:INFO:               scipy: 1.11.4
2024-07-18 07:18:54,183:INFO:              joblib: 1.3.2
2024-07-18 07:18:54,183:INFO:             sklearn: 1.4.2
2024-07-18 07:18:54,183:INFO:                pyod: 2.0.0
2024-07-18 07:18:54,183:INFO:            imblearn: 0.12.3
2024-07-18 07:18:54,183:INFO:   category_encoders: 2.6.3
2024-07-18 07:18:54,183:INFO:            lightgbm: 4.4.0
2024-07-18 07:18:54,183:INFO:               numba: 0.60.0
2024-07-18 07:18:54,183:INFO:            requests: 2.32.3
2024-07-18 07:18:54,183:INFO:          matplotlib: 3.7.5
2024-07-18 07:18:54,183:INFO:          scikitplot: 0.3.7
2024-07-18 07:18:54,183:INFO:         yellowbrick: 1.5
2024-07-18 07:18:54,183:INFO:              plotly: 5.22.0
2024-07-18 07:18:54,183:INFO:    plotly-resampler: Not installed
2024-07-18 07:18:54,184:INFO:             kaleido: 0.2.1
2024-07-18 07:18:54,184:INFO:           schemdraw: 0.15
2024-07-18 07:18:54,184:INFO:         statsmodels: 0.14.2
2024-07-18 07:18:54,184:INFO:              sktime: 0.26.0
2024-07-18 07:18:54,184:INFO:               tbats: 1.1.3
2024-07-18 07:18:54,184:INFO:            pmdarima: 2.0.4
2024-07-18 07:18:54,184:INFO:              psutil: 6.0.0
2024-07-18 07:18:54,184:INFO:          markupsafe: 2.1.5
2024-07-18 07:18:54,184:INFO:             pickle5: Not installed
2024-07-18 07:18:54,184:INFO:         cloudpickle: 3.0.0
2024-07-18 07:18:54,184:INFO:         deprecation: 2.1.0
2024-07-18 07:18:54,184:INFO:              xxhash: 3.4.1
2024-07-18 07:18:54,184:INFO:           wurlitzer: 3.1.1
2024-07-18 07:18:54,184:INFO:PyCaret optional dependencies:
2024-07-18 07:18:57,540:INFO:                shap: 0.44.1
2024-07-18 07:18:57,541:INFO:           interpret: 0.6.2
2024-07-18 07:18:57,541:INFO:                umap: 0.5.6
2024-07-18 07:18:57,541:INFO:     ydata_profiling: 4.9.0
2024-07-18 07:18:57,541:INFO:  explainerdashboard: 0.4.7
2024-07-18 07:18:57,541:INFO:             autoviz: Not installed
2024-07-18 07:18:57,541:INFO:           fairlearn: 0.7.0
2024-07-18 07:18:57,541:INFO:          deepchecks: Not installed
2024-07-18 07:18:57,541:INFO:             xgboost: 2.0.3
2024-07-18 07:18:57,541:INFO:            catboost: 1.2.5
2024-07-18 07:18:57,541:INFO:              kmodes: 0.12.2
2024-07-18 07:18:57,541:INFO:             mlxtend: 0.23.1
2024-07-18 07:18:57,541:INFO:       statsforecast: 1.5.0
2024-07-18 07:18:57,541:INFO:        tune_sklearn: 0.5.0
2024-07-18 07:18:57,541:INFO:                 ray: 2.20.0
2024-07-18 07:18:57,541:INFO:            hyperopt: 0.2.7
2024-07-18 07:18:57,541:INFO:              optuna: 3.6.1
2024-07-18 07:18:57,541:INFO:               skopt: 0.10.2
2024-07-18 07:18:57,541:INFO:              mlflow: 2.14.3
2024-07-18 07:18:57,541:INFO:              gradio: 4.38.1
2024-07-18 07:18:57,541:INFO:             fastapi: 0.111.1
2024-07-18 07:18:57,541:INFO:             uvicorn: 0.30.1
2024-07-18 07:18:57,541:INFO:              m2cgen: 0.10.0
2024-07-18 07:18:57,541:INFO:           evidently: 0.4.31
2024-07-18 07:18:57,541:INFO:               fugue: 0.8.7
2024-07-18 07:18:57,541:INFO:           streamlit: Not installed
2024-07-18 07:18:57,541:INFO:             prophet: Not installed
2024-07-18 07:18:57,542:INFO:None
2024-07-18 07:18:57,542:INFO:Set up data.
2024-07-18 07:19:17,197:INFO:PyCaret ClassificationExperiment
2024-07-18 07:19:17,197:INFO:Logging name: clf-default-name
2024-07-18 07:19:17,197:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-18 07:19:17,197:INFO:version 3.3.2
2024-07-18 07:19:17,198:INFO:Initializing setup()
2024-07-18 07:19:17,198:INFO:self.USI: 9e0a
2024-07-18 07:19:17,198:INFO:self._variable_keys: {'X', 'exp_name_log', 'fix_imbalance', 'gpu_param', 'n_jobs_param', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'target_param', 'X_train', 'y_test', 'data', 'memory', '_available_plots', 'fold_shuffle_param', 'idx', 'exp_id', 'USI', 'X_test', 'is_multiclass', '_ml_usecase', 'fold_groups_param', 'fold_generator', 'logging_param', 'html_param', 'y', 'y_train', 'seed'}
2024-07-18 07:19:17,198:INFO:Checking environment
2024-07-18 07:19:17,198:INFO:python_version: 3.11.9
2024-07-18 07:19:17,198:INFO:python_build: ('main', 'Apr 19 2024 16:40:41')
2024-07-18 07:19:17,198:INFO:machine: AMD64
2024-07-18 07:19:17,198:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-18 07:19:17,202:INFO:Memory: svmem(total=17114869760, available=9288056832, percent=45.7, used=7826812928, free=9288056832)
2024-07-18 07:19:17,202:INFO:Physical Core: 4
2024-07-18 07:19:17,202:INFO:Logical Core: 8
2024-07-18 07:19:17,202:INFO:Checking libraries
2024-07-18 07:19:17,202:INFO:System:
2024-07-18 07:19:17,202:INFO:    python: 3.11.9 | packaged by Anaconda, Inc. | (main, Apr 19 2024, 16:40:41) [MSC v.1916 64 bit (AMD64)]
2024-07-18 07:19:17,202:INFO:executable: c:\Users\Rajasa\miniconda3\envs\env1\python.exe
2024-07-18 07:19:17,202:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-18 07:19:17,202:INFO:PyCaret required dependencies:
2024-07-18 07:19:17,203:INFO:                 pip: 24.0
2024-07-18 07:19:17,203:INFO:          setuptools: 69.5.1
2024-07-18 07:19:17,203:INFO:             pycaret: 3.3.2
2024-07-18 07:19:17,203:INFO:             IPython: 8.25.0
2024-07-18 07:19:17,203:INFO:          ipywidgets: 8.1.3
2024-07-18 07:19:17,203:INFO:                tqdm: 4.66.4
2024-07-18 07:19:17,203:INFO:               numpy: 1.26.4
2024-07-18 07:19:17,203:INFO:              pandas: 2.1.4
2024-07-18 07:19:17,203:INFO:              jinja2: 3.1.4
2024-07-18 07:19:17,204:INFO:               scipy: 1.11.4
2024-07-18 07:19:17,205:INFO:              joblib: 1.3.2
2024-07-18 07:19:17,205:INFO:             sklearn: 1.4.2
2024-07-18 07:19:17,205:INFO:                pyod: 2.0.0
2024-07-18 07:19:17,205:INFO:            imblearn: 0.12.3
2024-07-18 07:19:17,205:INFO:   category_encoders: 2.6.3
2024-07-18 07:19:17,205:INFO:            lightgbm: 4.4.0
2024-07-18 07:19:17,205:INFO:               numba: 0.60.0
2024-07-18 07:19:17,205:INFO:            requests: 2.32.3
2024-07-18 07:19:17,205:INFO:          matplotlib: 3.7.5
2024-07-18 07:19:17,205:INFO:          scikitplot: 0.3.7
2024-07-18 07:19:17,205:INFO:         yellowbrick: 1.5
2024-07-18 07:19:17,206:INFO:              plotly: 5.22.0
2024-07-18 07:19:17,206:INFO:    plotly-resampler: Not installed
2024-07-18 07:19:17,206:INFO:             kaleido: 0.2.1
2024-07-18 07:19:17,206:INFO:           schemdraw: 0.15
2024-07-18 07:19:17,206:INFO:         statsmodels: 0.14.2
2024-07-18 07:19:17,206:INFO:              sktime: 0.26.0
2024-07-18 07:19:17,206:INFO:               tbats: 1.1.3
2024-07-18 07:19:17,206:INFO:            pmdarima: 2.0.4
2024-07-18 07:19:17,207:INFO:              psutil: 6.0.0
2024-07-18 07:19:17,207:INFO:          markupsafe: 2.1.5
2024-07-18 07:19:17,207:INFO:             pickle5: Not installed
2024-07-18 07:19:17,207:INFO:         cloudpickle: 3.0.0
2024-07-18 07:19:17,207:INFO:         deprecation: 2.1.0
2024-07-18 07:19:17,207:INFO:              xxhash: 3.4.1
2024-07-18 07:19:17,207:INFO:           wurlitzer: 3.1.1
2024-07-18 07:19:17,207:INFO:PyCaret optional dependencies:
2024-07-18 07:19:17,207:INFO:                shap: 0.44.1
2024-07-18 07:19:17,207:INFO:           interpret: 0.6.2
2024-07-18 07:19:17,207:INFO:                umap: 0.5.6
2024-07-18 07:19:17,207:INFO:     ydata_profiling: 4.9.0
2024-07-18 07:19:17,207:INFO:  explainerdashboard: 0.4.7
2024-07-18 07:19:17,207:INFO:             autoviz: Not installed
2024-07-18 07:19:17,207:INFO:           fairlearn: 0.7.0
2024-07-18 07:19:17,207:INFO:          deepchecks: Not installed
2024-07-18 07:19:17,207:INFO:             xgboost: 2.0.3
2024-07-18 07:19:17,207:INFO:            catboost: 1.2.5
2024-07-18 07:19:17,207:INFO:              kmodes: 0.12.2
2024-07-18 07:19:17,207:INFO:             mlxtend: 0.23.1
2024-07-18 07:19:17,207:INFO:       statsforecast: 1.5.0
2024-07-18 07:19:17,208:INFO:        tune_sklearn: 0.5.0
2024-07-18 07:19:17,208:INFO:                 ray: 2.20.0
2024-07-18 07:19:17,208:INFO:            hyperopt: 0.2.7
2024-07-18 07:19:17,208:INFO:              optuna: 3.6.1
2024-07-18 07:19:17,208:INFO:               skopt: 0.10.2
2024-07-18 07:19:17,208:INFO:              mlflow: 2.14.3
2024-07-18 07:19:17,208:INFO:              gradio: 4.38.1
2024-07-18 07:19:17,208:INFO:             fastapi: 0.111.1
2024-07-18 07:19:17,208:INFO:             uvicorn: 0.30.1
2024-07-18 07:19:17,208:INFO:              m2cgen: 0.10.0
2024-07-18 07:19:17,208:INFO:           evidently: 0.4.31
2024-07-18 07:19:17,208:INFO:               fugue: 0.8.7
2024-07-18 07:19:17,208:INFO:           streamlit: Not installed
2024-07-18 07:19:17,208:INFO:             prophet: Not installed
2024-07-18 07:19:17,208:INFO:None
2024-07-18 07:19:17,208:INFO:Set up data.
2024-07-18 07:19:17,247:INFO:Set up folding strategy.
2024-07-18 07:19:17,247:INFO:Set up train/test split.
2024-07-18 07:19:17,286:INFO:Set up index.
2024-07-18 07:19:17,287:INFO:Assigning column types.
2024-07-18 07:19:17,319:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-18 07:19:17,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-18 07:19:17,379:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 07:19:17,413:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:17,416:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:17,560:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-18 07:19:17,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 07:19:17,588:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:17,590:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:17,591:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-18 07:19:17,633:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 07:19:17,660:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:17,663:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:17,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 07:19:17,732:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:17,735:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:17,735:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-18 07:19:17,808:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:17,811:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:17,895:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:17,897:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:17,900:INFO:Preparing preprocessing pipeline...
2024-07-18 07:19:17,904:INFO:Set up label encoding.
2024-07-18 07:19:17,904:INFO:Set up simple imputation.
2024-07-18 07:19:17,914:INFO:Set up encoding of categorical features.
2024-07-18 07:19:17,915:INFO:Set up imbalanced handling.
2024-07-18 07:19:17,917:INFO:Set up column name cleaning.
2024-07-18 07:19:18,637:INFO:Finished creating preprocessing pipeline.
2024-07-18 07:19:18,646:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rajasa\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Packets Rx Droppe...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-18 07:19:18,646:INFO:Creating final display dataframe.
2024-07-18 07:19:19,539:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5432
1                        Target                                              Label
2                   Target type                                         Multiclass
3                Target mapping  Blackhole: 0, Diversion: 1, Overflow: 2, PortS...
4           Original data shape                                        (33637, 34)
5        Transformed data shape                                        (43337, 48)
6   Transformed train set shape                                        (33245, 48)
7    Transformed test set shape                                        (10092, 48)
8              Numeric features                                                 29
9          Categorical features                                                  3
10                   Preprocess                                               True
11              Imputation type                                             simple
12           Numeric imputation                                               mean
13       Categorical imputation                                               mode
14     Maximum one-hot encoding                                                 25
15              Encoding method                                               None
16                Fix imbalance  SMOTETomek(n_jobs=None, random_state=None, sam...
17         Fix imbalance method                                              SMOTE
18               Fold Generator                                    StratifiedKFold
19                  Fold Number                                                 10
20                     CPU Jobs                                                 -1
21                      Use GPU                                              False
22               Log Experiment                                              False
23              Experiment Name                                   clf-default-name
24                          USI                                               9e0a
2024-07-18 07:19:19,620:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:19,623:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:19,694:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 07:19:19,697:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 07:19:19,698:INFO:setup() successfully completed in 2.5s...............
2024-07-18 07:20:16,729:INFO:Initializing compare_models()
2024-07-18 07:20:16,730:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-18 07:20:16,730:INFO:Checking exceptions
2024-07-18 07:20:16,751:INFO:Preparing display monitor
2024-07-18 07:20:16,811:INFO:Initializing Logistic Regression
2024-07-18 07:20:16,812:INFO:Total runtime is 1.713434855143229e-05 minutes
2024-07-18 07:20:16,816:INFO:SubProcess create_model() called ==================================
2024-07-18 07:20:16,817:INFO:Initializing create_model()
2024-07-18 07:20:16,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:20:16,817:INFO:Checking exceptions
2024-07-18 07:20:16,818:INFO:Importing libraries
2024-07-18 07:20:16,818:INFO:Copying training dataset
2024-07-18 07:20:16,851:INFO:Defining folds
2024-07-18 07:20:16,851:INFO:Declaring metric variables
2024-07-18 07:20:16,855:INFO:Importing untrained model
2024-07-18 07:20:16,859:INFO:Logistic Regression Imported successfully
2024-07-18 07:20:16,867:INFO:Starting cross validation
2024-07-18 07:20:16,870:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:20:42,023:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:42,099:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:42,110:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,130:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,150:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,235:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:42,319:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:42,330:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,351:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,375:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,559:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:42,644:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:42,655:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,678:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,680:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:42,699:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,775:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:42,793:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,833:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:42,862:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:43,765:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:43,829:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:43,836:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:43,838:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:43,855:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:43,872:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:43,901:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:43,909:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:43,929:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:43,951:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:44,038:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:44,099:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:44,105:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:44,119:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:44,133:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:44,142:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:44,193:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:44,201:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:44,220:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:44,238:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,528:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:52,562:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:52,567:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,579:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,592:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,731:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 07:20:52,765:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:20:52,770:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,782:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,795:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:52,816:INFO:Calculating mean and std
2024-07-18 07:20:52,816:INFO:Creating metrics dataframe
2024-07-18 07:20:52,819:INFO:Uploading results into container
2024-07-18 07:20:52,819:INFO:Uploading model into container now
2024-07-18 07:20:52,819:INFO:_master_model_container: 1
2024-07-18 07:20:52,819:INFO:_display_container: 2
2024-07-18 07:20:52,819:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5432, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-18 07:20:52,819:INFO:create_model() successfully completed......................................
2024-07-18 07:20:52,933:INFO:SubProcess create_model() end ==================================
2024-07-18 07:20:52,934:INFO:Creating metrics dataframe
2024-07-18 07:20:52,939:INFO:Initializing K Neighbors Classifier
2024-07-18 07:20:52,940:INFO:Total runtime is 0.6021631360054016 minutes
2024-07-18 07:20:52,944:INFO:SubProcess create_model() called ==================================
2024-07-18 07:20:52,944:INFO:Initializing create_model()
2024-07-18 07:20:52,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:20:52,944:INFO:Checking exceptions
2024-07-18 07:20:52,944:INFO:Importing libraries
2024-07-18 07:20:52,944:INFO:Copying training dataset
2024-07-18 07:20:52,972:INFO:Defining folds
2024-07-18 07:20:52,972:INFO:Declaring metric variables
2024-07-18 07:20:52,977:INFO:Importing untrained model
2024-07-18 07:20:52,982:INFO:K Neighbors Classifier Imported successfully
2024-07-18 07:20:52,989:INFO:Starting cross validation
2024-07-18 07:20:52,993:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:20:56,081:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,101:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,106:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,115:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,131:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,133:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,136:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,150:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,153:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,167:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,186:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,204:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,379:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,398:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,402:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,403:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,419:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,419:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,419:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,423:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,436:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,438:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,445:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:56,463:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,874:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,875:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,887:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,888:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,898:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,901:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:57,920:INFO:Calculating mean and std
2024-07-18 07:20:57,920:INFO:Creating metrics dataframe
2024-07-18 07:20:57,922:INFO:Uploading results into container
2024-07-18 07:20:57,922:INFO:Uploading model into container now
2024-07-18 07:20:57,923:INFO:_master_model_container: 2
2024-07-18 07:20:57,923:INFO:_display_container: 2
2024-07-18 07:20:57,923:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-18 07:20:57,923:INFO:create_model() successfully completed......................................
2024-07-18 07:20:58,033:INFO:SubProcess create_model() end ==================================
2024-07-18 07:20:58,033:INFO:Creating metrics dataframe
2024-07-18 07:20:58,039:INFO:Initializing Naive Bayes
2024-07-18 07:20:58,039:INFO:Total runtime is 0.6871403177579244 minutes
2024-07-18 07:20:58,043:INFO:SubProcess create_model() called ==================================
2024-07-18 07:20:58,043:INFO:Initializing create_model()
2024-07-18 07:20:58,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:20:58,044:INFO:Checking exceptions
2024-07-18 07:20:58,044:INFO:Importing libraries
2024-07-18 07:20:58,045:INFO:Copying training dataset
2024-07-18 07:20:58,070:INFO:Defining folds
2024-07-18 07:20:58,070:INFO:Declaring metric variables
2024-07-18 07:20:58,073:INFO:Importing untrained model
2024-07-18 07:20:58,077:INFO:Naive Bayes Imported successfully
2024-07-18 07:20:58,085:INFO:Starting cross validation
2024-07-18 07:20:58,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:20:59,722:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,724:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,743:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,745:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,755:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,764:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,766:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,771:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,776:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,778:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,781:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,786:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,797:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,800:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,806:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,807:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,809:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,822:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,830:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,834:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,849:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,858:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,869:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:20:59,889:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,627:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,635:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,641:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,647:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,653:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,660:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:00,684:INFO:Calculating mean and std
2024-07-18 07:21:00,685:INFO:Creating metrics dataframe
2024-07-18 07:21:00,686:INFO:Uploading results into container
2024-07-18 07:21:00,687:INFO:Uploading model into container now
2024-07-18 07:21:00,687:INFO:_master_model_container: 3
2024-07-18 07:21:00,687:INFO:_display_container: 2
2024-07-18 07:21:00,687:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-18 07:21:00,689:INFO:create_model() successfully completed......................................
2024-07-18 07:21:00,805:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:00,805:INFO:Creating metrics dataframe
2024-07-18 07:21:00,812:INFO:Initializing Decision Tree Classifier
2024-07-18 07:21:00,813:INFO:Total runtime is 0.7333755771319072 minutes
2024-07-18 07:21:00,815:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:00,816:INFO:Initializing create_model()
2024-07-18 07:21:00,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:00,816:INFO:Checking exceptions
2024-07-18 07:21:00,816:INFO:Importing libraries
2024-07-18 07:21:00,816:INFO:Copying training dataset
2024-07-18 07:21:00,842:INFO:Defining folds
2024-07-18 07:21:00,843:INFO:Declaring metric variables
2024-07-18 07:21:00,847:INFO:Importing untrained model
2024-07-18 07:21:00,851:INFO:Decision Tree Classifier Imported successfully
2024-07-18 07:21:00,859:INFO:Starting cross validation
2024-07-18 07:21:00,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:21:03,013:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,036:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,060:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,108:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,129:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,152:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,164:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,169:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,185:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,192:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,206:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,213:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,240:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,262:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,285:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,312:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,334:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,335:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,354:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,355:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,371:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,376:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,389:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:03,409:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,471:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,485:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,497:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,524:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,536:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,549:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:04,571:INFO:Calculating mean and std
2024-07-18 07:21:04,573:INFO:Creating metrics dataframe
2024-07-18 07:21:04,575:INFO:Uploading results into container
2024-07-18 07:21:04,575:INFO:Uploading model into container now
2024-07-18 07:21:04,575:INFO:_master_model_container: 4
2024-07-18 07:21:04,575:INFO:_display_container: 2
2024-07-18 07:21:04,576:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5432, splitter='best')
2024-07-18 07:21:04,576:INFO:create_model() successfully completed......................................
2024-07-18 07:21:04,684:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:04,684:INFO:Creating metrics dataframe
2024-07-18 07:21:04,691:INFO:Initializing SVM - Linear Kernel
2024-07-18 07:21:04,691:INFO:Total runtime is 0.7980086088180542 minutes
2024-07-18 07:21:04,695:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:04,695:INFO:Initializing create_model()
2024-07-18 07:21:04,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:04,695:INFO:Checking exceptions
2024-07-18 07:21:04,695:INFO:Importing libraries
2024-07-18 07:21:04,695:INFO:Copying training dataset
2024-07-18 07:21:04,723:INFO:Defining folds
2024-07-18 07:21:04,723:INFO:Declaring metric variables
2024-07-18 07:21:04,727:INFO:Importing untrained model
2024-07-18 07:21:04,730:INFO:SVM - Linear Kernel Imported successfully
2024-07-18 07:21:04,736:INFO:Starting cross validation
2024-07-18 07:21:04,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:21:12,091:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:12,099:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,151:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,180:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:12,186:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,188:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,216:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,229:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 07:21:12,237:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,249:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:12,279:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:12,286:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,290:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,312:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,339:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,353:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 07:21:12,372:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,399:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,795:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:12,802:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,825:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,846:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,945:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:12,954:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,973:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:12,993:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:13,433:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:13,441:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:13,443:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:13,451:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:13,481:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:13,500:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:13,514:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:13,534:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,315:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:15,320:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,334:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,348:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,535:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:15,540:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,553:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,566:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:15,589:INFO:Calculating mean and std
2024-07-18 07:21:15,590:INFO:Creating metrics dataframe
2024-07-18 07:21:15,592:INFO:Uploading results into container
2024-07-18 07:21:15,592:INFO:Uploading model into container now
2024-07-18 07:21:15,592:INFO:_master_model_container: 5
2024-07-18 07:21:15,592:INFO:_display_container: 2
2024-07-18 07:21:15,593:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5432, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-18 07:21:15,593:INFO:create_model() successfully completed......................................
2024-07-18 07:21:15,715:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:15,715:INFO:Creating metrics dataframe
2024-07-18 07:21:15,722:INFO:Initializing Ridge Classifier
2024-07-18 07:21:15,723:INFO:Total runtime is 0.9818785627683004 minutes
2024-07-18 07:21:15,728:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:15,728:INFO:Initializing create_model()
2024-07-18 07:21:15,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:15,728:INFO:Checking exceptions
2024-07-18 07:21:15,728:INFO:Importing libraries
2024-07-18 07:21:15,728:INFO:Copying training dataset
2024-07-18 07:21:15,753:INFO:Defining folds
2024-07-18 07:21:15,753:INFO:Declaring metric variables
2024-07-18 07:21:15,756:INFO:Importing untrained model
2024-07-18 07:21:15,760:INFO:Ridge Classifier Imported successfully
2024-07-18 07:21:15,767:INFO:Starting cross validation
2024-07-18 07:21:15,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:21:17,399:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.04359e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 07:21:17,461:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.4485e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 07:21:17,521:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,533:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,556:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,582:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,611:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,633:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,657:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,679:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,750:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,760:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,765:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,775:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,782:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,798:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,801:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,802:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,811:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,817:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,820:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,826:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,832:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,845:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,849:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,854:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,855:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,858:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:17,865:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,870:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,873:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,883:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,894:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:17,903:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,633:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:18,638:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,651:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,660:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:18,666:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,668:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,681:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,694:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:18,722:INFO:Calculating mean and std
2024-07-18 07:21:18,723:INFO:Creating metrics dataframe
2024-07-18 07:21:18,725:INFO:Uploading results into container
2024-07-18 07:21:18,725:INFO:Uploading model into container now
2024-07-18 07:21:18,726:INFO:_master_model_container: 6
2024-07-18 07:21:18,726:INFO:_display_container: 2
2024-07-18 07:21:18,726:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5432, solver='auto',
                tol=0.0001)
2024-07-18 07:21:18,726:INFO:create_model() successfully completed......................................
2024-07-18 07:21:18,837:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:18,837:INFO:Creating metrics dataframe
2024-07-18 07:21:18,845:INFO:Initializing Random Forest Classifier
2024-07-18 07:21:18,845:INFO:Total runtime is 1.0339104652404785 minutes
2024-07-18 07:21:18,849:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:18,849:INFO:Initializing create_model()
2024-07-18 07:21:18,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:18,849:INFO:Checking exceptions
2024-07-18 07:21:18,849:INFO:Importing libraries
2024-07-18 07:21:18,849:INFO:Copying training dataset
2024-07-18 07:21:18,875:INFO:Defining folds
2024-07-18 07:21:18,875:INFO:Declaring metric variables
2024-07-18 07:21:18,879:INFO:Importing untrained model
2024-07-18 07:21:18,884:INFO:Random Forest Classifier Imported successfully
2024-07-18 07:21:18,889:INFO:Starting cross validation
2024-07-18 07:21:18,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:21:30,090:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,090:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,114:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,138:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,145:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,162:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,196:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,207:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,213:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,214:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,222:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,228:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,229:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,235:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,239:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,250:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,253:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,256:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,260:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,278:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,288:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,317:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,335:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:30,347:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,509:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,522:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,537:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,541:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,549:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,567:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:33,585:INFO:Calculating mean and std
2024-07-18 07:21:33,586:INFO:Creating metrics dataframe
2024-07-18 07:21:33,589:INFO:Uploading results into container
2024-07-18 07:21:33,589:INFO:Uploading model into container now
2024-07-18 07:21:33,589:INFO:_master_model_container: 7
2024-07-18 07:21:33,590:INFO:_display_container: 2
2024-07-18 07:21:33,590:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5432, verbose=0,
                       warm_start=False)
2024-07-18 07:21:33,590:INFO:create_model() successfully completed......................................
2024-07-18 07:21:33,706:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:33,706:INFO:Creating metrics dataframe
2024-07-18 07:21:33,714:INFO:Initializing Quadratic Discriminant Analysis
2024-07-18 07:21:33,714:INFO:Total runtime is 1.2817272782325744 minutes
2024-07-18 07:21:33,717:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:33,717:INFO:Initializing create_model()
2024-07-18 07:21:33,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:33,718:INFO:Checking exceptions
2024-07-18 07:21:33,718:INFO:Importing libraries
2024-07-18 07:21:33,718:INFO:Copying training dataset
2024-07-18 07:21:33,745:INFO:Defining folds
2024-07-18 07:21:33,745:INFO:Declaring metric variables
2024-07-18 07:21:33,748:INFO:Importing untrained model
2024-07-18 07:21:33,752:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-18 07:21:33,759:INFO:Starting cross validation
2024-07-18 07:21:33,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:21:35,265:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,282:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,336:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,376:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,376:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,378:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,394:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,452:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:35,649:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,658:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,679:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,688:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,690:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,697:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,698:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,701:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,705:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,712:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,713:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,720:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,721:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,721:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,734:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,748:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,751:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,753:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,757:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,757:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,762:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,766:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,772:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,775:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,783:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,795:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:35,796:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,803:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,804:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,817:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,821:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:35,837:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,556:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:36,588:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 07:21:36,679:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:36,684:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,701:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,707:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:36,712:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,716:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,725:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,736:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:36,760:INFO:Calculating mean and std
2024-07-18 07:21:36,761:INFO:Creating metrics dataframe
2024-07-18 07:21:36,763:INFO:Uploading results into container
2024-07-18 07:21:36,764:INFO:Uploading model into container now
2024-07-18 07:21:36,765:INFO:_master_model_container: 8
2024-07-18 07:21:36,765:INFO:_display_container: 2
2024-07-18 07:21:36,765:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-18 07:21:36,765:INFO:create_model() successfully completed......................................
2024-07-18 07:21:36,877:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:36,878:INFO:Creating metrics dataframe
2024-07-18 07:21:36,884:INFO:Initializing Ada Boost Classifier
2024-07-18 07:21:36,884:INFO:Total runtime is 1.3345648368199665 minutes
2024-07-18 07:21:36,887:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:36,887:INFO:Initializing create_model()
2024-07-18 07:21:36,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:36,887:INFO:Checking exceptions
2024-07-18 07:21:36,887:INFO:Importing libraries
2024-07-18 07:21:36,887:INFO:Copying training dataset
2024-07-18 07:21:36,914:INFO:Defining folds
2024-07-18 07:21:36,914:INFO:Declaring metric variables
2024-07-18 07:21:36,917:INFO:Importing untrained model
2024-07-18 07:21:36,921:INFO:Ada Boost Classifier Imported successfully
2024-07-18 07:21:36,928:INFO:Starting cross validation
2024-07-18 07:21:36,930:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:21:38,318:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,353:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,357:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,363:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,369:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,385:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,415:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:38,435:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:43,382:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,391:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,409:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,417:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,417:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,428:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,436:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,438:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,444:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,445:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,446:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,466:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,467:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,485:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,492:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,509:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,929:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,936:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,938:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,944:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,945:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:43,951:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,958:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,965:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,968:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,976:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,984:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:43,985:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:44,014:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:44,020:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:44,032:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:44,045:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:44,376:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:44,409:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 07:21:47,584:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:47,588:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:47,601:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:47,612:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:21:47,615:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:47,620:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:47,634:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:47,647:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:21:47,674:INFO:Calculating mean and std
2024-07-18 07:21:47,675:INFO:Creating metrics dataframe
2024-07-18 07:21:47,677:INFO:Uploading results into container
2024-07-18 07:21:47,678:INFO:Uploading model into container now
2024-07-18 07:21:47,679:INFO:_master_model_container: 9
2024-07-18 07:21:47,679:INFO:_display_container: 2
2024-07-18 07:21:47,679:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5432)
2024-07-18 07:21:47,679:INFO:create_model() successfully completed......................................
2024-07-18 07:21:47,798:INFO:SubProcess create_model() end ==================================
2024-07-18 07:21:47,798:INFO:Creating metrics dataframe
2024-07-18 07:21:47,805:INFO:Initializing Gradient Boosting Classifier
2024-07-18 07:21:47,805:INFO:Total runtime is 1.5165798823038736 minutes
2024-07-18 07:21:47,808:INFO:SubProcess create_model() called ==================================
2024-07-18 07:21:47,809:INFO:Initializing create_model()
2024-07-18 07:21:47,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DBDCE8E450>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DBB6F8B9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 07:21:47,809:INFO:Checking exceptions
2024-07-18 07:21:47,809:INFO:Importing libraries
2024-07-18 07:21:47,809:INFO:Copying training dataset
2024-07-18 07:21:47,834:INFO:Defining folds
2024-07-18 07:21:47,835:INFO:Declaring metric variables
2024-07-18 07:21:47,837:INFO:Importing untrained model
2024-07-18 07:21:47,841:INFO:Gradient Boosting Classifier Imported successfully
2024-07-18 07:21:47,848:INFO:Starting cross validation
2024-07-18 07:21:47,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 07:23:19,940:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:23:19,949:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:19,971:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:19,995:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:21,480:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:23:21,488:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:21,510:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:21,532:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:23,347:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 07:23:23,357:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:23,379:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 07:23:23,400:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:21:47,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 09:21:47,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 09:21:47,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 09:21:47,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-18 09:22:30,228:INFO:PyCaret ClassificationExperiment
2024-07-18 09:22:30,228:INFO:Logging name: clf-default-name
2024-07-18 09:22:30,228:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-18 09:22:30,228:INFO:version 3.3.2
2024-07-18 09:22:30,228:INFO:Initializing setup()
2024-07-18 09:22:30,228:INFO:self.USI: 5aa9
2024-07-18 09:22:30,228:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'is_multiclass', 'y_train', 'USI', 'data', 'X_test', 'target_param', 'seed', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'log_plots_param', 'y_test', 'y', 'gpu_param', 'fix_imbalance', 'html_param', 'idx', 'gpu_n_jobs_param', 'X_train', 'X', 'fold_generator', 'memory', '_available_plots', '_ml_usecase', 'logging_param', 'exp_id'}
2024-07-18 09:22:30,228:INFO:Checking environment
2024-07-18 09:22:30,228:INFO:python_version: 3.11.9
2024-07-18 09:22:30,228:INFO:python_build: ('main', 'Apr 19 2024 16:40:41')
2024-07-18 09:22:30,228:INFO:machine: AMD64
2024-07-18 09:22:30,228:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-18 09:22:30,232:INFO:Memory: svmem(total=17114869760, available=9964875776, percent=41.8, used=7149993984, free=9964875776)
2024-07-18 09:22:30,232:INFO:Physical Core: 4
2024-07-18 09:22:30,232:INFO:Logical Core: 8
2024-07-18 09:22:30,232:INFO:Checking libraries
2024-07-18 09:22:30,232:INFO:System:
2024-07-18 09:22:30,232:INFO:    python: 3.11.9 | packaged by Anaconda, Inc. | (main, Apr 19 2024, 16:40:41) [MSC v.1916 64 bit (AMD64)]
2024-07-18 09:22:30,232:INFO:executable: c:\Users\Rajasa\miniconda3\envs\env1\python.exe
2024-07-18 09:22:30,232:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-18 09:22:30,232:INFO:PyCaret required dependencies:
2024-07-18 09:22:31,640:INFO:                 pip: 24.0
2024-07-18 09:22:31,640:INFO:          setuptools: 69.5.1
2024-07-18 09:22:31,640:INFO:             pycaret: 3.3.2
2024-07-18 09:22:31,640:INFO:             IPython: 8.25.0
2024-07-18 09:22:31,640:INFO:          ipywidgets: 8.1.3
2024-07-18 09:22:31,641:INFO:                tqdm: 4.66.4
2024-07-18 09:22:31,641:INFO:               numpy: 1.26.4
2024-07-18 09:22:31,641:INFO:              pandas: 2.1.4
2024-07-18 09:22:31,641:INFO:              jinja2: 3.1.4
2024-07-18 09:22:31,641:INFO:               scipy: 1.11.4
2024-07-18 09:22:31,641:INFO:              joblib: 1.3.2
2024-07-18 09:22:31,641:INFO:             sklearn: 1.4.2
2024-07-18 09:22:31,641:INFO:                pyod: 2.0.0
2024-07-18 09:22:31,641:INFO:            imblearn: 0.12.3
2024-07-18 09:22:31,641:INFO:   category_encoders: 2.6.3
2024-07-18 09:22:31,641:INFO:            lightgbm: 4.4.0
2024-07-18 09:22:31,641:INFO:               numba: 0.60.0
2024-07-18 09:22:31,641:INFO:            requests: 2.32.3
2024-07-18 09:22:31,641:INFO:          matplotlib: 3.7.5
2024-07-18 09:22:31,641:INFO:          scikitplot: 0.3.7
2024-07-18 09:22:31,641:INFO:         yellowbrick: 1.5
2024-07-18 09:22:31,641:INFO:              plotly: 5.22.0
2024-07-18 09:22:31,641:INFO:    plotly-resampler: Not installed
2024-07-18 09:22:31,641:INFO:             kaleido: 0.2.1
2024-07-18 09:22:31,641:INFO:           schemdraw: 0.15
2024-07-18 09:22:31,642:INFO:         statsmodels: 0.14.2
2024-07-18 09:22:31,642:INFO:              sktime: 0.26.0
2024-07-18 09:22:31,642:INFO:               tbats: 1.1.3
2024-07-18 09:22:31,642:INFO:            pmdarima: 2.0.4
2024-07-18 09:22:31,642:INFO:              psutil: 6.0.0
2024-07-18 09:22:31,642:INFO:          markupsafe: 2.1.5
2024-07-18 09:22:31,642:INFO:             pickle5: Not installed
2024-07-18 09:22:31,642:INFO:         cloudpickle: 3.0.0
2024-07-18 09:22:31,642:INFO:         deprecation: 2.1.0
2024-07-18 09:22:31,642:INFO:              xxhash: 3.4.1
2024-07-18 09:22:31,642:INFO:           wurlitzer: 3.1.1
2024-07-18 09:22:31,642:INFO:PyCaret optional dependencies:
2024-07-18 09:22:35,711:INFO:                shap: 0.44.1
2024-07-18 09:22:35,711:INFO:           interpret: 0.6.2
2024-07-18 09:22:35,712:INFO:                umap: 0.5.6
2024-07-18 09:22:35,712:INFO:     ydata_profiling: 4.9.0
2024-07-18 09:22:35,712:INFO:  explainerdashboard: 0.4.7
2024-07-18 09:22:35,712:INFO:             autoviz: Not installed
2024-07-18 09:22:35,712:INFO:           fairlearn: 0.7.0
2024-07-18 09:22:35,712:INFO:          deepchecks: Not installed
2024-07-18 09:22:35,712:INFO:             xgboost: 2.0.3
2024-07-18 09:22:35,712:INFO:            catboost: 1.2.5
2024-07-18 09:22:35,712:INFO:              kmodes: 0.12.2
2024-07-18 09:22:35,712:INFO:             mlxtend: 0.23.1
2024-07-18 09:22:35,712:INFO:       statsforecast: 1.5.0
2024-07-18 09:22:35,712:INFO:        tune_sklearn: 0.5.0
2024-07-18 09:22:35,712:INFO:                 ray: 2.20.0
2024-07-18 09:22:35,712:INFO:            hyperopt: 0.2.7
2024-07-18 09:22:35,712:INFO:              optuna: 3.6.1
2024-07-18 09:22:35,712:INFO:               skopt: 0.10.2
2024-07-18 09:22:35,712:INFO:              mlflow: 2.14.3
2024-07-18 09:22:35,712:INFO:              gradio: 4.38.1
2024-07-18 09:22:35,712:INFO:             fastapi: 0.111.1
2024-07-18 09:22:35,713:INFO:             uvicorn: 0.30.1
2024-07-18 09:22:35,713:INFO:              m2cgen: 0.10.0
2024-07-18 09:22:35,713:INFO:           evidently: 0.4.31
2024-07-18 09:22:35,713:INFO:               fugue: 0.8.7
2024-07-18 09:22:35,713:INFO:           streamlit: Not installed
2024-07-18 09:22:35,713:INFO:             prophet: Not installed
2024-07-18 09:22:35,713:INFO:None
2024-07-18 09:22:35,713:INFO:Set up data.
2024-07-18 09:22:35,753:INFO:Set up folding strategy.
2024-07-18 09:22:35,753:INFO:Set up train/test split.
2024-07-18 09:22:35,804:INFO:Set up index.
2024-07-18 09:22:35,805:INFO:Assigning column types.
2024-07-18 09:22:35,831:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-18 09:22:35,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-18 09:22:35,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 09:22:35,946:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:35,951:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:36,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-18 09:22:36,120:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 09:22:36,160:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:36,163:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:36,164:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-18 09:22:36,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 09:22:36,271:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:36,276:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:36,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 09:22:36,378:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:36,382:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:36,384:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-18 09:22:36,493:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:36,497:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:36,605:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:36,610:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:36,613:INFO:Preparing preprocessing pipeline...
2024-07-18 09:22:36,617:INFO:Set up label encoding.
2024-07-18 09:22:36,617:INFO:Set up simple imputation.
2024-07-18 09:22:36,632:INFO:Set up encoding of categorical features.
2024-07-18 09:22:36,632:INFO:Set up imbalanced handling.
2024-07-18 09:22:36,637:INFO:Set up column name cleaning.
2024-07-18 09:22:37,540:INFO:Finished creating preprocessing pipeline.
2024-07-18 09:22:37,552:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rajasa\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Packets Rx Droppe...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-18 09:22:37,552:INFO:Creating final display dataframe.
2024-07-18 09:22:38,534:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                Fix imbalance   
17         Fix imbalance method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                8923  
1                                               Label  
2                                          Multiclass  
3   Blackhole: 0, Diversion: 1, Overflow: 2, PortS...  
4                                         (33637, 34)  
5                                         (43337, 48)  
6                                         (33245, 48)  
7                                         (10092, 48)  
8                                                  29  
9                                                   3  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16  SMOTETomek(n_jobs=None, random_state=None, sam...  
17                                              SMOTE  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               5aa9  
2024-07-18 09:22:38,655:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:38,659:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:38,763:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 09:22:38,766:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 09:22:38,768:INFO:setup() successfully completed in 8.55s...............
2024-07-18 09:22:43,347:INFO:Initializing compare_models()
2024-07-18 09:22:43,347:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-18 09:22:43,347:INFO:Checking exceptions
2024-07-18 09:22:43,369:INFO:Preparing display monitor
2024-07-18 09:22:43,393:INFO:Initializing Logistic Regression
2024-07-18 09:22:43,393:INFO:Total runtime is 0.0 minutes
2024-07-18 09:22:43,396:INFO:SubProcess create_model() called ==================================
2024-07-18 09:22:43,397:INFO:Initializing create_model()
2024-07-18 09:22:43,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:22:43,397:INFO:Checking exceptions
2024-07-18 09:22:43,397:INFO:Importing libraries
2024-07-18 09:22:43,397:INFO:Copying training dataset
2024-07-18 09:22:43,432:INFO:Defining folds
2024-07-18 09:22:43,432:INFO:Declaring metric variables
2024-07-18 09:22:43,436:INFO:Importing untrained model
2024-07-18 09:22:43,441:INFO:Logistic Regression Imported successfully
2024-07-18 09:22:43,448:INFO:Starting cross validation
2024-07-18 09:22:43,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:23:11,037:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:11,143:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:11,225:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,246:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,283:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,494:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:11,605:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:11,625:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,639:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:11,650:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,674:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,737:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:11,748:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,778:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,784:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:11,805:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,886:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:11,899:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,925:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:11,949:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:12,781:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:12,862:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:12,872:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:12,892:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:12,913:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:12,934:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:13,015:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:13,025:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,046:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,065:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,216:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:13,292:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:13,302:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,324:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,345:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,396:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:13,482:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:13,495:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,517:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:13,538:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,404:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:23,448:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:23,455:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,474:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,487:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,513:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 09:23:23,549:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:23,555:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,569:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,582:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:23,601:INFO:Calculating mean and std
2024-07-18 09:23:23,602:INFO:Creating metrics dataframe
2024-07-18 09:23:23,605:INFO:Uploading results into container
2024-07-18 09:23:23,605:INFO:Uploading model into container now
2024-07-18 09:23:23,605:INFO:_master_model_container: 1
2024-07-18 09:23:23,606:INFO:_display_container: 2
2024-07-18 09:23:23,606:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8923, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-18 09:23:23,606:INFO:create_model() successfully completed......................................
2024-07-18 09:23:23,719:INFO:SubProcess create_model() end ==================================
2024-07-18 09:23:23,720:INFO:Creating metrics dataframe
2024-07-18 09:23:23,726:INFO:Initializing K Neighbors Classifier
2024-07-18 09:23:23,726:INFO:Total runtime is 0.672220782438914 minutes
2024-07-18 09:23:23,729:INFO:SubProcess create_model() called ==================================
2024-07-18 09:23:23,729:INFO:Initializing create_model()
2024-07-18 09:23:23,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:23:23,729:INFO:Checking exceptions
2024-07-18 09:23:23,729:INFO:Importing libraries
2024-07-18 09:23:23,730:INFO:Copying training dataset
2024-07-18 09:23:23,758:INFO:Defining folds
2024-07-18 09:23:23,758:INFO:Declaring metric variables
2024-07-18 09:23:23,761:INFO:Importing untrained model
2024-07-18 09:23:23,765:INFO:K Neighbors Classifier Imported successfully
2024-07-18 09:23:23,771:INFO:Starting cross validation
2024-07-18 09:23:23,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:23:26,981:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,004:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,007:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,010:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,027:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,029:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,034:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,045:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,053:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,054:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,072:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,096:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,494:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,537:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,539:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,564:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,577:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,637:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,649:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,660:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,698:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,712:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,736:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:27,761:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,408:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,421:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,434:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,473:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,486:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,498:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:29,524:INFO:Calculating mean and std
2024-07-18 09:23:29,525:INFO:Creating metrics dataframe
2024-07-18 09:23:29,527:INFO:Uploading results into container
2024-07-18 09:23:29,527:INFO:Uploading model into container now
2024-07-18 09:23:29,528:INFO:_master_model_container: 2
2024-07-18 09:23:29,528:INFO:_display_container: 2
2024-07-18 09:23:29,528:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-18 09:23:29,528:INFO:create_model() successfully completed......................................
2024-07-18 09:23:29,630:INFO:SubProcess create_model() end ==================================
2024-07-18 09:23:29,630:INFO:Creating metrics dataframe
2024-07-18 09:23:29,637:INFO:Initializing Naive Bayes
2024-07-18 09:23:29,637:INFO:Total runtime is 0.7707386136054993 minutes
2024-07-18 09:23:29,641:INFO:SubProcess create_model() called ==================================
2024-07-18 09:23:29,641:INFO:Initializing create_model()
2024-07-18 09:23:29,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:23:29,641:INFO:Checking exceptions
2024-07-18 09:23:29,641:INFO:Importing libraries
2024-07-18 09:23:29,642:INFO:Copying training dataset
2024-07-18 09:23:29,668:INFO:Defining folds
2024-07-18 09:23:29,668:INFO:Declaring metric variables
2024-07-18 09:23:29,672:INFO:Importing untrained model
2024-07-18 09:23:29,676:INFO:Naive Bayes Imported successfully
2024-07-18 09:23:29,682:INFO:Starting cross validation
2024-07-18 09:23:29,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:23:31,287:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,311:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,336:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,339:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,363:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,367:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,383:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,391:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,396:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,411:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,413:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,434:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,485:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,511:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,536:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,547:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,562:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,567:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,581:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,583:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,585:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,596:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,602:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:31,620:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,279:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,292:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,305:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,309:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,323:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,335:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:32,359:INFO:Calculating mean and std
2024-07-18 09:23:32,360:INFO:Creating metrics dataframe
2024-07-18 09:23:32,362:INFO:Uploading results into container
2024-07-18 09:23:32,362:INFO:Uploading model into container now
2024-07-18 09:23:32,363:INFO:_master_model_container: 3
2024-07-18 09:23:32,364:INFO:_display_container: 2
2024-07-18 09:23:32,364:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-18 09:23:32,364:INFO:create_model() successfully completed......................................
2024-07-18 09:23:32,464:INFO:SubProcess create_model() end ==================================
2024-07-18 09:23:32,464:INFO:Creating metrics dataframe
2024-07-18 09:23:32,472:INFO:Initializing Decision Tree Classifier
2024-07-18 09:23:32,472:INFO:Total runtime is 0.8179826537768047 minutes
2024-07-18 09:23:32,475:INFO:SubProcess create_model() called ==================================
2024-07-18 09:23:32,475:INFO:Initializing create_model()
2024-07-18 09:23:32,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:23:32,475:INFO:Checking exceptions
2024-07-18 09:23:32,475:INFO:Importing libraries
2024-07-18 09:23:32,475:INFO:Copying training dataset
2024-07-18 09:23:32,505:INFO:Defining folds
2024-07-18 09:23:32,505:INFO:Declaring metric variables
2024-07-18 09:23:32,509:INFO:Importing untrained model
2024-07-18 09:23:32,512:INFO:Decision Tree Classifier Imported successfully
2024-07-18 09:23:32,518:INFO:Starting cross validation
2024-07-18 09:23:32,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:23:34,968:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:34,971:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:34,988:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:34,993:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:34,993:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,014:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,015:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,020:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,044:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,082:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,083:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,106:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,109:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,114:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,130:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,132:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,138:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,159:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,244:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,254:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,265:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,275:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,285:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:35,294:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,450:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,454:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,464:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,469:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,483:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,487:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:36,514:INFO:Calculating mean and std
2024-07-18 09:23:36,515:INFO:Creating metrics dataframe
2024-07-18 09:23:36,517:INFO:Uploading results into container
2024-07-18 09:23:36,518:INFO:Uploading model into container now
2024-07-18 09:23:36,518:INFO:_master_model_container: 4
2024-07-18 09:23:36,518:INFO:_display_container: 2
2024-07-18 09:23:36,519:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8923, splitter='best')
2024-07-18 09:23:36,519:INFO:create_model() successfully completed......................................
2024-07-18 09:23:36,619:INFO:SubProcess create_model() end ==================================
2024-07-18 09:23:36,619:INFO:Creating metrics dataframe
2024-07-18 09:23:36,626:INFO:Initializing SVM - Linear Kernel
2024-07-18 09:23:36,626:INFO:Total runtime is 0.887226414680481 minutes
2024-07-18 09:23:36,629:INFO:SubProcess create_model() called ==================================
2024-07-18 09:23:36,630:INFO:Initializing create_model()
2024-07-18 09:23:36,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:23:36,630:INFO:Checking exceptions
2024-07-18 09:23:36,630:INFO:Importing libraries
2024-07-18 09:23:36,630:INFO:Copying training dataset
2024-07-18 09:23:36,658:INFO:Defining folds
2024-07-18 09:23:36,658:INFO:Declaring metric variables
2024-07-18 09:23:36,660:INFO:Importing untrained model
2024-07-18 09:23:36,664:INFO:SVM - Linear Kernel Imported successfully
2024-07-18 09:23:36,671:INFO:Starting cross validation
2024-07-18 09:23:36,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:23:44,287:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:44,296:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:44,430:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:44,443:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:44,471:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:44,480:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:44,499:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:44,520:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:44,580:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:44,590:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,022:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:45,030:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,114:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,137:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,173:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:45,182:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,212:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:45,221:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,229:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,247:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:45,266:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,280:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,281:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:45,292:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,427:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:45,434:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,456:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,467:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:45,474:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,565:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:45,572:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,589:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:45,598:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:45,606:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:46,774:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:46,782:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:46,826:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:46,856:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:47,763:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:47,768:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:47,781:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:47,794:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:48,168:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:48,174:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:48,187:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:48,195:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:23:48,200:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:48,233:INFO:Calculating mean and std
2024-07-18 09:23:48,235:INFO:Creating metrics dataframe
2024-07-18 09:23:48,242:INFO:Uploading results into container
2024-07-18 09:23:48,243:INFO:Uploading model into container now
2024-07-18 09:23:48,244:INFO:_master_model_container: 5
2024-07-18 09:23:48,244:INFO:_display_container: 2
2024-07-18 09:23:48,245:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8923, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-18 09:23:48,245:INFO:create_model() successfully completed......................................
2024-07-18 09:23:48,376:INFO:SubProcess create_model() end ==================================
2024-07-18 09:23:48,376:INFO:Creating metrics dataframe
2024-07-18 09:23:48,387:INFO:Initializing Ridge Classifier
2024-07-18 09:23:48,388:INFO:Total runtime is 1.0832562486330668 minutes
2024-07-18 09:23:48,393:INFO:SubProcess create_model() called ==================================
2024-07-18 09:23:48,393:INFO:Initializing create_model()
2024-07-18 09:23:48,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:23:48,393:INFO:Checking exceptions
2024-07-18 09:23:48,393:INFO:Importing libraries
2024-07-18 09:23:48,394:INFO:Copying training dataset
2024-07-18 09:23:48,436:INFO:Defining folds
2024-07-18 09:23:48,436:INFO:Declaring metric variables
2024-07-18 09:23:48,441:INFO:Importing untrained model
2024-07-18 09:23:48,447:INFO:Ridge Classifier Imported successfully
2024-07-18 09:23:48,456:INFO:Starting cross validation
2024-07-18 09:23:48,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:23:49,947:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.4532e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 09:23:49,984:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.62542e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 09:23:49,989:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.60556e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 09:23:50,048:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,076:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,080:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,090:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,096:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,102:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,110:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,117:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,125:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,141:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,146:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,164:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,475:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.51384e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 09:23:50,657:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,668:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,693:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,717:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,932:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,938:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,942:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,950:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:50,952:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,959:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,963:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,975:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,981:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,984:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:50,997:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,003:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,038:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:51,046:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,069:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,095:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,681:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:51,688:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,705:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,725:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,729:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:23:51,736:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,755:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,772:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:23:51,808:INFO:Calculating mean and std
2024-07-18 09:23:51,809:INFO:Creating metrics dataframe
2024-07-18 09:23:51,812:INFO:Uploading results into container
2024-07-18 09:23:51,813:INFO:Uploading model into container now
2024-07-18 09:23:51,813:INFO:_master_model_container: 6
2024-07-18 09:23:51,814:INFO:_display_container: 2
2024-07-18 09:23:51,814:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8923, solver='auto',
                tol=0.0001)
2024-07-18 09:23:51,814:INFO:create_model() successfully completed......................................
2024-07-18 09:23:51,941:INFO:SubProcess create_model() end ==================================
2024-07-18 09:23:51,941:INFO:Creating metrics dataframe
2024-07-18 09:23:51,950:INFO:Initializing Random Forest Classifier
2024-07-18 09:23:51,950:INFO:Total runtime is 1.1426201025644938 minutes
2024-07-18 09:23:51,954:INFO:SubProcess create_model() called ==================================
2024-07-18 09:23:51,954:INFO:Initializing create_model()
2024-07-18 09:23:51,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:23:51,954:INFO:Checking exceptions
2024-07-18 09:23:51,955:INFO:Importing libraries
2024-07-18 09:23:51,955:INFO:Copying training dataset
2024-07-18 09:23:51,991:INFO:Defining folds
2024-07-18 09:23:51,991:INFO:Declaring metric variables
2024-07-18 09:23:51,995:INFO:Importing untrained model
2024-07-18 09:23:51,999:INFO:Random Forest Classifier Imported successfully
2024-07-18 09:23:52,007:INFO:Starting cross validation
2024-07-18 09:23:52,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:24:03,619:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,622:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,648:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,653:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,669:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,675:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,678:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,693:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,760:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,762:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,788:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,839:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,894:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,921:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,925:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,932:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,950:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,959:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,968:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:03,999:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:04,007:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:04,049:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:04,087:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:04,115:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,582:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,605:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,624:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,680:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,723:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,766:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:07,836:INFO:Calculating mean and std
2024-07-18 09:24:07,841:INFO:Creating metrics dataframe
2024-07-18 09:24:07,845:INFO:Uploading results into container
2024-07-18 09:24:07,846:INFO:Uploading model into container now
2024-07-18 09:24:07,847:INFO:_master_model_container: 7
2024-07-18 09:24:07,847:INFO:_display_container: 2
2024-07-18 09:24:07,848:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8923, verbose=0,
                       warm_start=False)
2024-07-18 09:24:07,848:INFO:create_model() successfully completed......................................
2024-07-18 09:24:08,012:INFO:SubProcess create_model() end ==================================
2024-07-18 09:24:08,012:INFO:Creating metrics dataframe
2024-07-18 09:24:08,028:INFO:Initializing Quadratic Discriminant Analysis
2024-07-18 09:24:08,028:INFO:Total runtime is 1.4105891784032185 minutes
2024-07-18 09:24:08,033:INFO:SubProcess create_model() called ==================================
2024-07-18 09:24:08,033:INFO:Initializing create_model()
2024-07-18 09:24:08,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:24:08,033:INFO:Checking exceptions
2024-07-18 09:24:08,034:INFO:Importing libraries
2024-07-18 09:24:08,034:INFO:Copying training dataset
2024-07-18 09:24:08,082:INFO:Defining folds
2024-07-18 09:24:08,082:INFO:Declaring metric variables
2024-07-18 09:24:08,088:INFO:Importing untrained model
2024-07-18 09:24:08,093:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-18 09:24:08,103:INFO:Starting cross validation
2024-07-18 09:24:08,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:24:09,737:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:09,895:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:09,985:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:10,016:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:10,104:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,116:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,118:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:10,139:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:10,142:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,157:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:10,164:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:10,172:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,273:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,301:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,332:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,358:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,367:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,387:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,394:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,396:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,416:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,418:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,421:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,442:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,443:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,458:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,461:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,462:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:10,465:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,467:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,470:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,473:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,488:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,492:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,495:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,501:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,507:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,522:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:10,526:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,318:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:11,421:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 09:24:11,451:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:11,470:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,503:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,535:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,617:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:11,626:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,654:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,721:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:11,772:INFO:Calculating mean and std
2024-07-18 09:24:11,773:INFO:Creating metrics dataframe
2024-07-18 09:24:11,777:INFO:Uploading results into container
2024-07-18 09:24:11,778:INFO:Uploading model into container now
2024-07-18 09:24:11,778:INFO:_master_model_container: 8
2024-07-18 09:24:11,780:INFO:_display_container: 2
2024-07-18 09:24:11,780:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-18 09:24:11,780:INFO:create_model() successfully completed......................................
2024-07-18 09:24:11,948:INFO:SubProcess create_model() end ==================================
2024-07-18 09:24:11,948:INFO:Creating metrics dataframe
2024-07-18 09:24:11,962:INFO:Initializing Ada Boost Classifier
2024-07-18 09:24:11,962:INFO:Total runtime is 1.4761644442876178 minutes
2024-07-18 09:24:11,968:INFO:SubProcess create_model() called ==================================
2024-07-18 09:24:11,969:INFO:Initializing create_model()
2024-07-18 09:24:11,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:24:11,970:INFO:Checking exceptions
2024-07-18 09:24:11,970:INFO:Importing libraries
2024-07-18 09:24:11,971:INFO:Copying training dataset
2024-07-18 09:24:12,043:INFO:Defining folds
2024-07-18 09:24:12,047:INFO:Declaring metric variables
2024-07-18 09:24:12,054:INFO:Importing untrained model
2024-07-18 09:24:12,065:INFO:Ada Boost Classifier Imported successfully
2024-07-18 09:24:12,081:INFO:Starting cross validation
2024-07-18 09:24:12,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:24:13,527:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:13,536:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:13,969:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:13,988:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:14,032:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:14,043:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:14,075:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:14,117:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:19,250:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:19,251:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:19,260:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,260:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,282:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,286:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,307:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,311:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,609:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:19,620:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,651:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,676:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,855:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:19,866:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,901:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:19,928:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,154:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:20,163:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,187:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,208:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,374:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:20,379:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:20,383:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,388:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,398:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:20,402:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,406:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,408:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,420:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,424:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,427:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,443:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:20,541:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:20,558:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 09:24:24,142:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:24,149:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:24,152:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:24:24,158:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:24,165:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:24,177:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:24,184:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:24,190:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:24:24,218:INFO:Calculating mean and std
2024-07-18 09:24:24,220:INFO:Creating metrics dataframe
2024-07-18 09:24:24,222:INFO:Uploading results into container
2024-07-18 09:24:24,222:INFO:Uploading model into container now
2024-07-18 09:24:24,223:INFO:_master_model_container: 9
2024-07-18 09:24:24,223:INFO:_display_container: 2
2024-07-18 09:24:24,223:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8923)
2024-07-18 09:24:24,223:INFO:create_model() successfully completed......................................
2024-07-18 09:24:24,333:INFO:SubProcess create_model() end ==================================
2024-07-18 09:24:24,333:INFO:Creating metrics dataframe
2024-07-18 09:24:24,342:INFO:Initializing Gradient Boosting Classifier
2024-07-18 09:24:24,342:INFO:Total runtime is 1.6824839949607848 minutes
2024-07-18 09:24:24,345:INFO:SubProcess create_model() called ==================================
2024-07-18 09:24:24,345:INFO:Initializing create_model()
2024-07-18 09:24:24,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:24:24,345:INFO:Checking exceptions
2024-07-18 09:24:24,345:INFO:Importing libraries
2024-07-18 09:24:24,345:INFO:Copying training dataset
2024-07-18 09:24:24,376:INFO:Defining folds
2024-07-18 09:24:24,376:INFO:Declaring metric variables
2024-07-18 09:24:24,381:INFO:Importing untrained model
2024-07-18 09:24:24,385:INFO:Gradient Boosting Classifier Imported successfully
2024-07-18 09:24:24,392:INFO:Starting cross validation
2024-07-18 09:24:24,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:26:01,832:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:01,841:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:01,865:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:01,888:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:02,021:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:02,032:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:02,059:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:02,080:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:03,311:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:03,319:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:03,340:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:03,366:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,278:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:04,286:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,308:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,330:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,364:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:04,373:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,394:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,416:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,575:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:04,583:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,604:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,626:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,860:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:04,869:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,889:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:04,910:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:05,805:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:26:05,812:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:05,825:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:26:05,844:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,391:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:11,398:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,413:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:11,414:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,420:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,430:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,437:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,455:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:11,487:INFO:Calculating mean and std
2024-07-18 09:27:11,488:INFO:Creating metrics dataframe
2024-07-18 09:27:11,490:INFO:Uploading results into container
2024-07-18 09:27:11,491:INFO:Uploading model into container now
2024-07-18 09:27:11,491:INFO:_master_model_container: 10
2024-07-18 09:27:11,492:INFO:_display_container: 2
2024-07-18 09:27:11,492:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8923, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-18 09:27:11,493:INFO:create_model() successfully completed......................................
2024-07-18 09:27:11,625:INFO:SubProcess create_model() end ==================================
2024-07-18 09:27:11,625:INFO:Creating metrics dataframe
2024-07-18 09:27:11,637:INFO:Initializing Linear Discriminant Analysis
2024-07-18 09:27:11,637:INFO:Total runtime is 4.47073358297348 minutes
2024-07-18 09:27:11,640:INFO:SubProcess create_model() called ==================================
2024-07-18 09:27:11,640:INFO:Initializing create_model()
2024-07-18 09:27:11,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:27:11,640:INFO:Checking exceptions
2024-07-18 09:27:11,641:INFO:Importing libraries
2024-07-18 09:27:11,641:INFO:Copying training dataset
2024-07-18 09:27:11,675:INFO:Defining folds
2024-07-18 09:27:11,675:INFO:Declaring metric variables
2024-07-18 09:27:11,678:INFO:Importing untrained model
2024-07-18 09:27:11,682:INFO:Linear Discriminant Analysis Imported successfully
2024-07-18 09:27:11,687:INFO:Starting cross validation
2024-07-18 09:27:11,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:27:13,583:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,599:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,630:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,666:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,678:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,695:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,719:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,733:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,736:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,744:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,744:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,745:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,768:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,768:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,791:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,793:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,837:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,839:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,846:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,847:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,862:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,866:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,868:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,871:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,887:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,892:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,892:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,894:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:13,903:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,912:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,924:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:13,944:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,919:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:14,923:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 09:27:14,925:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,930:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,942:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,945:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,958:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,963:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:14,988:INFO:Calculating mean and std
2024-07-18 09:27:14,990:INFO:Creating metrics dataframe
2024-07-18 09:27:14,992:INFO:Uploading results into container
2024-07-18 09:27:14,993:INFO:Uploading model into container now
2024-07-18 09:27:14,994:INFO:_master_model_container: 11
2024-07-18 09:27:14,994:INFO:_display_container: 2
2024-07-18 09:27:14,995:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-18 09:27:14,995:INFO:create_model() successfully completed......................................
2024-07-18 09:27:15,111:INFO:SubProcess create_model() end ==================================
2024-07-18 09:27:15,111:INFO:Creating metrics dataframe
2024-07-18 09:27:15,122:INFO:Initializing Extra Trees Classifier
2024-07-18 09:27:15,122:INFO:Total runtime is 4.528827500343323 minutes
2024-07-18 09:27:15,125:INFO:SubProcess create_model() called ==================================
2024-07-18 09:27:15,126:INFO:Initializing create_model()
2024-07-18 09:27:15,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:27:15,127:INFO:Checking exceptions
2024-07-18 09:27:15,127:INFO:Importing libraries
2024-07-18 09:27:15,127:INFO:Copying training dataset
2024-07-18 09:27:15,161:INFO:Defining folds
2024-07-18 09:27:15,161:INFO:Declaring metric variables
2024-07-18 09:27:15,164:INFO:Importing untrained model
2024-07-18 09:27:15,168:INFO:Extra Trees Classifier Imported successfully
2024-07-18 09:27:15,176:INFO:Starting cross validation
2024-07-18 09:27:15,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:27:23,020:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,076:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,089:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,091:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,100:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,116:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,119:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,120:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,121:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,125:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,134:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,140:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,146:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,146:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,154:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,158:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,169:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,201:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,234:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,259:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,279:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,279:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,296:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:23,312:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,538:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,552:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,567:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,605:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,616:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,628:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:25,657:INFO:Calculating mean and std
2024-07-18 09:27:25,657:INFO:Creating metrics dataframe
2024-07-18 09:27:25,659:INFO:Uploading results into container
2024-07-18 09:27:25,659:INFO:Uploading model into container now
2024-07-18 09:27:25,660:INFO:_master_model_container: 12
2024-07-18 09:27:25,660:INFO:_display_container: 2
2024-07-18 09:27:25,661:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8923, verbose=0,
                     warm_start=False)
2024-07-18 09:27:25,661:INFO:create_model() successfully completed......................................
2024-07-18 09:27:25,763:INFO:SubProcess create_model() end ==================================
2024-07-18 09:27:25,763:INFO:Creating metrics dataframe
2024-07-18 09:27:25,772:INFO:Initializing Extreme Gradient Boosting
2024-07-18 09:27:25,772:INFO:Total runtime is 4.706327919165293 minutes
2024-07-18 09:27:25,776:INFO:SubProcess create_model() called ==================================
2024-07-18 09:27:25,777:INFO:Initializing create_model()
2024-07-18 09:27:25,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:27:25,777:INFO:Checking exceptions
2024-07-18 09:27:25,777:INFO:Importing libraries
2024-07-18 09:27:25,777:INFO:Copying training dataset
2024-07-18 09:27:25,804:INFO:Defining folds
2024-07-18 09:27:25,804:INFO:Declaring metric variables
2024-07-18 09:27:25,807:INFO:Importing untrained model
2024-07-18 09:27:25,812:INFO:Extreme Gradient Boosting Imported successfully
2024-07-18 09:27:25,819:INFO:Starting cross validation
2024-07-18 09:27:25,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:27:35,434:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,455:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,478:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,605:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,625:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,635:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,641:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,645:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,657:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,657:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,665:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,679:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,680:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,683:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,689:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,701:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,701:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,725:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,758:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,780:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,788:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,803:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,811:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:35,834:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,368:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,381:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,394:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,423:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,435:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,448:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:41,468:INFO:Calculating mean and std
2024-07-18 09:27:41,469:INFO:Creating metrics dataframe
2024-07-18 09:27:41,471:INFO:Uploading results into container
2024-07-18 09:27:41,471:INFO:Uploading model into container now
2024-07-18 09:27:41,472:INFO:_master_model_container: 13
2024-07-18 09:27:41,472:INFO:_display_container: 2
2024-07-18 09:27:41,474:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-18 09:27:41,474:INFO:create_model() successfully completed......................................
2024-07-18 09:27:41,581:INFO:SubProcess create_model() end ==================================
2024-07-18 09:27:41,581:INFO:Creating metrics dataframe
2024-07-18 09:27:41,589:INFO:Initializing Light Gradient Boosting Machine
2024-07-18 09:27:41,589:INFO:Total runtime is 4.969947493076324 minutes
2024-07-18 09:27:41,592:INFO:SubProcess create_model() called ==================================
2024-07-18 09:27:41,592:INFO:Initializing create_model()
2024-07-18 09:27:41,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:27:41,593:INFO:Checking exceptions
2024-07-18 09:27:41,593:INFO:Importing libraries
2024-07-18 09:27:41,593:INFO:Copying training dataset
2024-07-18 09:27:41,618:INFO:Defining folds
2024-07-18 09:27:41,618:INFO:Declaring metric variables
2024-07-18 09:27:41,621:INFO:Importing untrained model
2024-07-18 09:27:41,625:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-18 09:27:41,633:INFO:Starting cross validation
2024-07-18 09:27:41,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:27:52,082:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,104:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,126:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,355:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,377:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,399:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,877:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,899:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,915:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,922:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,939:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:52,960:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,180:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,200:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,221:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,487:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,540:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,553:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,561:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,575:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,596:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,681:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,704:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:53,725:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:55,813:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:55,832:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:55,851:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:56,143:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:56,161:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:56,179:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:27:56,214:INFO:Calculating mean and std
2024-07-18 09:27:56,215:INFO:Creating metrics dataframe
2024-07-18 09:27:56,217:INFO:Uploading results into container
2024-07-18 09:27:56,218:INFO:Uploading model into container now
2024-07-18 09:27:56,218:INFO:_master_model_container: 14
2024-07-18 09:27:56,219:INFO:_display_container: 2
2024-07-18 09:27:56,220:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8923, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-18 09:27:56,220:INFO:create_model() successfully completed......................................
2024-07-18 09:27:56,319:INFO:SubProcess create_model() end ==================================
2024-07-18 09:27:56,319:INFO:Creating metrics dataframe
2024-07-18 09:27:56,331:INFO:Initializing CatBoost Classifier
2024-07-18 09:27:56,331:INFO:Total runtime is 5.2156323472658785 minutes
2024-07-18 09:27:56,334:INFO:SubProcess create_model() called ==================================
2024-07-18 09:27:56,334:INFO:Initializing create_model()
2024-07-18 09:27:56,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:27:56,335:INFO:Checking exceptions
2024-07-18 09:27:56,335:INFO:Importing libraries
2024-07-18 09:27:56,335:INFO:Copying training dataset
2024-07-18 09:27:56,367:INFO:Defining folds
2024-07-18 09:27:56,368:INFO:Declaring metric variables
2024-07-18 09:27:56,372:INFO:Importing untrained model
2024-07-18 09:27:56,377:INFO:CatBoost Classifier Imported successfully
2024-07-18 09:27:56,384:INFO:Starting cross validation
2024-07-18 09:27:56,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:30:24,634:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:24,659:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:24,681:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:26,185:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:26,217:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:26,237:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:28,784:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:28,835:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:28,856:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:28,931:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:28,961:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:28,994:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:29,150:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:29,181:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:29,212:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,039:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,067:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,087:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,325:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,348:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,369:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,450:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,472:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:30:31,492:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,597:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,616:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,636:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,852:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,863:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,875:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:07,901:INFO:Calculating mean and std
2024-07-18 09:31:07,903:INFO:Creating metrics dataframe
2024-07-18 09:31:07,905:INFO:Uploading results into container
2024-07-18 09:31:07,905:INFO:Uploading model into container now
2024-07-18 09:31:07,905:INFO:_master_model_container: 15
2024-07-18 09:31:07,905:INFO:_display_container: 2
2024-07-18 09:31:07,905:INFO:<catboost.core.CatBoostClassifier object at 0x00000242504713D0>
2024-07-18 09:31:07,905:INFO:create_model() successfully completed......................................
2024-07-18 09:31:08,014:INFO:SubProcess create_model() end ==================================
2024-07-18 09:31:08,014:INFO:Creating metrics dataframe
2024-07-18 09:31:08,024:INFO:Initializing Dummy Classifier
2024-07-18 09:31:08,024:INFO:Total runtime is 8.410525715351104 minutes
2024-07-18 09:31:08,028:INFO:SubProcess create_model() called ==================================
2024-07-18 09:31:08,028:INFO:Initializing create_model()
2024-07-18 09:31:08,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000242509A2F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:31:08,029:INFO:Checking exceptions
2024-07-18 09:31:08,029:INFO:Importing libraries
2024-07-18 09:31:08,029:INFO:Copying training dataset
2024-07-18 09:31:08,055:INFO:Defining folds
2024-07-18 09:31:08,055:INFO:Declaring metric variables
2024-07-18 09:31:08,059:INFO:Importing untrained model
2024-07-18 09:31:08,062:INFO:Dummy Classifier Imported successfully
2024-07-18 09:31:08,069:INFO:Starting cross validation
2024-07-18 09:31:08,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 09:31:09,419:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,441:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,453:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,461:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,462:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,484:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,490:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,497:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,508:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,525:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,541:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,551:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,576:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,621:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,636:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,644:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,647:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,670:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,682:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,691:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,745:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,767:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,779:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,787:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,787:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,808:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,822:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,831:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,857:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,879:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:09,890:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:09,896:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,449:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,449:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,461:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,461:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,468:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:10,468:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 09:31:10,472:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,473:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:31:10,496:INFO:Calculating mean and std
2024-07-18 09:31:10,498:INFO:Creating metrics dataframe
2024-07-18 09:31:10,500:INFO:Uploading results into container
2024-07-18 09:31:10,500:INFO:Uploading model into container now
2024-07-18 09:31:10,500:INFO:_master_model_container: 16
2024-07-18 09:31:10,500:INFO:_display_container: 2
2024-07-18 09:31:10,500:INFO:DummyClassifier(constant=None, random_state=8923, strategy='prior')
2024-07-18 09:31:10,501:INFO:create_model() successfully completed......................................
2024-07-18 09:31:10,598:INFO:SubProcess create_model() end ==================================
2024-07-18 09:31:10,599:INFO:Creating metrics dataframe
2024-07-18 09:31:10,612:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-18 09:31:10,621:INFO:Initializing create_model()
2024-07-18 09:31:10,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 09:31:10,621:INFO:Checking exceptions
2024-07-18 09:31:10,622:INFO:Importing libraries
2024-07-18 09:31:10,623:INFO:Copying training dataset
2024-07-18 09:31:10,653:INFO:Defining folds
2024-07-18 09:31:10,653:INFO:Declaring metric variables
2024-07-18 09:31:10,653:INFO:Importing untrained model
2024-07-18 09:31:10,654:INFO:Declaring custom model
2024-07-18 09:31:10,655:INFO:Extreme Gradient Boosting Imported successfully
2024-07-18 09:31:10,657:INFO:Cross validation set to False
2024-07-18 09:31:10,657:INFO:Fitting Model
2024-07-18 09:31:13,011:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-07-18 09:31:13,011:INFO:create_model() successfully completed......................................
2024-07-18 09:31:13,153:INFO:_master_model_container: 16
2024-07-18 09:31:13,154:INFO:_display_container: 2
2024-07-18 09:31:13,154:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-07-18 09:31:13,154:INFO:compare_models() successfully completed......................................
2024-07-18 09:33:14,854:INFO:Initializing evaluate_model()
2024-07-18 09:33:14,855:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-18 09:33:14,880:INFO:Initializing plot_model()
2024-07-18 09:33:14,880:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:33:14,880:INFO:Checking exceptions
2024-07-18 09:33:14,892:INFO:Preloading libraries
2024-07-18 09:33:14,914:INFO:Copying training dataset
2024-07-18 09:33:14,914:INFO:Plot type: pipeline
2024-07-18 09:33:15,137:INFO:Visual Rendered Successfully
2024-07-18 09:33:15,238:INFO:plot_model() successfully completed......................................
2024-07-18 09:33:36,668:INFO:Initializing plot_model()
2024-07-18 09:33:36,668:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:33:36,668:INFO:Checking exceptions
2024-07-18 09:33:36,679:INFO:Preloading libraries
2024-07-18 09:33:36,701:INFO:Copying training dataset
2024-07-18 09:33:36,701:INFO:Plot type: confusion_matrix
2024-07-18 09:33:36,881:INFO:Fitting Model
2024-07-18 09:33:36,882:INFO:Scoring test/hold-out set
2024-07-18 09:33:37,171:INFO:Visual Rendered Successfully
2024-07-18 09:33:37,268:INFO:plot_model() successfully completed......................................
2024-07-18 09:33:49,792:INFO:Initializing predict_model()
2024-07-18 09:33:49,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024250369F80>)
2024-07-18 09:33:49,792:INFO:Checking exceptions
2024-07-18 09:33:49,792:INFO:Preloading libraries
2024-07-18 09:33:50,070:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:33:50,125:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:33:50,177:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 09:34:19,588:INFO:Initializing save_model()
2024-07-18 09:34:19,588:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), model_name=unr-idd_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rajasa\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Packets Rx Droppe...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-18 09:34:19,588:INFO:Adding model into prep_pipe
2024-07-18 09:34:19,613:INFO:unr-idd_best_model.pkl saved in current working directory
2024-07-18 09:34:19,630:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Packets Rx Dropped',
                                             'Packets Tx Dropped',
                                             'Packets Rx Errors',
                                             '...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2024-07-18 09:34:19,630:INFO:save_model() successfully completed......................................
2024-07-18 09:34:23,029:INFO:Initializing load_model()
2024-07-18 09:34:23,030:INFO:load_model(model_name=unr-idd_best_model, platform=None, authentication=None, verbose=True)
2024-07-18 09:50:53,730:INFO:Initializing plot_model()
2024-07-18 09:50:53,731:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:50:53,731:INFO:Checking exceptions
2024-07-18 09:50:53,743:INFO:Preloading libraries
2024-07-18 09:50:53,762:INFO:Copying training dataset
2024-07-18 09:50:53,762:INFO:Plot type: pipeline
2024-07-18 09:50:53,945:INFO:Visual Rendered Successfully
2024-07-18 09:50:54,054:INFO:plot_model() successfully completed......................................
2024-07-18 09:51:11,361:INFO:Initializing plot_model()
2024-07-18 09:51:11,361:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=dimension, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:51:11,361:INFO:Checking exceptions
2024-07-18 09:51:11,372:INFO:Preloading libraries
2024-07-18 09:51:11,393:INFO:Copying training dataset
2024-07-18 09:51:11,394:INFO:Plot type: dimension
2024-07-18 09:51:11,510:INFO:Fitting StandardScaler()
2024-07-18 09:51:11,573:INFO:Fitting PCA()
2024-07-18 09:51:11,785:INFO:Fitting & Transforming Model
2024-07-18 09:51:12,677:INFO:Visual Rendered Successfully
2024-07-18 09:51:12,774:INFO:plot_model() successfully completed......................................
2024-07-18 09:51:19,585:INFO:Initializing plot_model()
2024-07-18 09:51:19,585:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=rfe, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:51:19,585:INFO:Checking exceptions
2024-07-18 09:51:23,266:INFO:Initializing plot_model()
2024-07-18 09:51:23,266:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:51:23,266:INFO:Checking exceptions
2024-07-18 09:51:23,285:INFO:Preloading libraries
2024-07-18 09:51:23,305:INFO:Copying training dataset
2024-07-18 09:51:23,305:INFO:Plot type: pr
2024-07-18 09:51:23,488:INFO:Fitting Model
2024-07-18 09:51:38,249:INFO:Initializing plot_model()
2024-07-18 09:51:38,249:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=learning, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 09:51:38,250:INFO:Checking exceptions
2024-07-18 09:51:38,266:INFO:Preloading libraries
2024-07-18 09:51:38,287:INFO:Copying training dataset
2024-07-18 09:51:38,287:INFO:Plot type: learning
2024-07-18 09:51:38,470:INFO:Fitting Model
2024-07-18 09:52:45,318:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\xgboost\core.py", line 730, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\xgboost\sklearn.py", line 1471, in fit
    raise ValueError(
ValueError: Invalid classes inferred from unique values of `y`.  Expected: [0 1 2 3], got [0 1 3 4]

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-07-18 09:52:45,503:INFO:Visual Rendered Successfully
2024-07-18 09:52:45,625:INFO:plot_model() successfully completed......................................
2024-07-18 09:56:33,607:INFO:Initializing plot_model()
2024-07-18 09:56:33,607:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 09:56:33,607:INFO:Checking exceptions
2024-07-18 09:56:33,624:INFO:Preloading libraries
2024-07-18 09:56:33,648:INFO:Copying training dataset
2024-07-18 09:56:33,648:INFO:Plot type: confusion_matrix
2024-07-18 09:56:33,841:INFO:Fitting Model
2024-07-18 09:56:33,842:INFO:Scoring test/hold-out set
2024-07-18 09:56:34,140:INFO:Visual Rendered Successfully
2024-07-18 09:56:34,270:INFO:plot_model() successfully completed......................................
2024-07-18 09:56:55,465:INFO:Initializing plot_model()
2024-07-18 09:56:55,465:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=learning_curve, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 09:56:55,465:INFO:Checking exceptions
2024-07-18 10:17:25,678:INFO:Initializing plot_model()
2024-07-18 10:17:25,678:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=learning, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 10:17:25,679:INFO:Checking exceptions
2024-07-18 10:17:25,699:INFO:Preloading libraries
2024-07-18 10:17:25,723:INFO:Copying training dataset
2024-07-18 10:17:25,723:INFO:Plot type: learning
2024-07-18 10:17:25,909:INFO:Fitting Model
2024-07-18 10:18:36,288:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\xgboost\core.py", line 730, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\xgboost\sklearn.py", line 1471, in fit
    raise ValueError(
ValueError: Invalid classes inferred from unique values of `y`.  Expected: [0 1 2 3], got [0 1 3 4]

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-07-18 10:18:36,455:INFO:Visual Rendered Successfully
2024-07-18 10:18:36,600:INFO:plot_model() successfully completed......................................
2024-07-18 10:19:02,549:INFO:Initializing plot_model()
2024-07-18 10:19:02,550:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 10:19:02,550:INFO:Checking exceptions
2024-07-18 10:19:02,565:INFO:Preloading libraries
2024-07-18 10:19:02,587:INFO:Copying training dataset
2024-07-18 10:19:02,588:INFO:Plot type: feature
2024-07-18 10:19:02,589:WARNING:No coef_ found. Trying feature_importances_
2024-07-18 10:19:02,823:INFO:Visual Rendered Successfully
2024-07-18 10:19:02,953:INFO:plot_model() successfully completed......................................
2024-07-18 10:21:13,862:INFO:PyCaret ClassificationExperiment
2024-07-18 10:21:13,863:INFO:Logging name: clf-default-name
2024-07-18 10:21:13,863:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-18 10:21:13,863:INFO:version 3.3.2
2024-07-18 10:21:13,863:INFO:Initializing setup()
2024-07-18 10:21:13,863:INFO:self.USI: e29a
2024-07-18 10:21:13,863:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'is_multiclass', 'y_train', 'USI', 'data', 'X_test', 'target_param', 'seed', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'log_plots_param', 'y_test', 'y', 'gpu_param', 'fix_imbalance', 'html_param', 'idx', 'gpu_n_jobs_param', 'X_train', 'X', 'fold_generator', 'memory', '_available_plots', '_ml_usecase', 'logging_param', 'exp_id'}
2024-07-18 10:21:13,863:INFO:Checking environment
2024-07-18 10:21:13,864:INFO:python_version: 3.11.9
2024-07-18 10:21:13,864:INFO:python_build: ('main', 'Apr 19 2024 16:40:41')
2024-07-18 10:21:13,864:INFO:machine: AMD64
2024-07-18 10:21:13,864:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-18 10:21:13,870:INFO:Memory: svmem(total=17114869760, available=8776126464, percent=48.7, used=8338743296, free=8776126464)
2024-07-18 10:21:13,870:INFO:Physical Core: 4
2024-07-18 10:21:13,870:INFO:Logical Core: 8
2024-07-18 10:21:13,871:INFO:Checking libraries
2024-07-18 10:21:13,871:INFO:System:
2024-07-18 10:21:13,871:INFO:    python: 3.11.9 | packaged by Anaconda, Inc. | (main, Apr 19 2024, 16:40:41) [MSC v.1916 64 bit (AMD64)]
2024-07-18 10:21:13,871:INFO:executable: c:\Users\Rajasa\miniconda3\envs\env1\python.exe
2024-07-18 10:21:13,871:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-18 10:21:13,871:INFO:PyCaret required dependencies:
2024-07-18 10:21:13,871:INFO:                 pip: 24.0
2024-07-18 10:21:13,871:INFO:          setuptools: 69.5.1
2024-07-18 10:21:13,871:INFO:             pycaret: 3.3.2
2024-07-18 10:21:13,871:INFO:             IPython: 8.25.0
2024-07-18 10:21:13,871:INFO:          ipywidgets: 8.1.3
2024-07-18 10:21:13,871:INFO:                tqdm: 4.66.4
2024-07-18 10:21:13,871:INFO:               numpy: 1.26.4
2024-07-18 10:21:13,871:INFO:              pandas: 2.1.4
2024-07-18 10:21:13,871:INFO:              jinja2: 3.1.4
2024-07-18 10:21:13,872:INFO:               scipy: 1.11.4
2024-07-18 10:21:13,872:INFO:              joblib: 1.3.2
2024-07-18 10:21:13,872:INFO:             sklearn: 1.4.2
2024-07-18 10:21:13,872:INFO:                pyod: 2.0.0
2024-07-18 10:21:13,872:INFO:            imblearn: 0.12.3
2024-07-18 10:21:13,872:INFO:   category_encoders: 2.6.3
2024-07-18 10:21:13,872:INFO:            lightgbm: 4.4.0
2024-07-18 10:21:13,872:INFO:               numba: 0.60.0
2024-07-18 10:21:13,872:INFO:            requests: 2.32.3
2024-07-18 10:21:13,872:INFO:          matplotlib: 3.7.5
2024-07-18 10:21:13,872:INFO:          scikitplot: 0.3.7
2024-07-18 10:21:13,872:INFO:         yellowbrick: 1.5
2024-07-18 10:21:13,872:INFO:              plotly: 5.22.0
2024-07-18 10:21:13,872:INFO:    plotly-resampler: Not installed
2024-07-18 10:21:13,872:INFO:             kaleido: 0.2.1
2024-07-18 10:21:13,872:INFO:           schemdraw: 0.15
2024-07-18 10:21:13,873:INFO:         statsmodels: 0.14.2
2024-07-18 10:21:13,873:INFO:              sktime: 0.26.0
2024-07-18 10:21:13,873:INFO:               tbats: 1.1.3
2024-07-18 10:21:13,873:INFO:            pmdarima: 2.0.4
2024-07-18 10:21:13,873:INFO:              psutil: 6.0.0
2024-07-18 10:21:13,873:INFO:          markupsafe: 2.1.5
2024-07-18 10:21:13,873:INFO:             pickle5: Not installed
2024-07-18 10:21:13,873:INFO:         cloudpickle: 3.0.0
2024-07-18 10:21:13,873:INFO:         deprecation: 2.1.0
2024-07-18 10:21:13,873:INFO:              xxhash: 3.4.1
2024-07-18 10:21:13,873:INFO:           wurlitzer: 3.1.1
2024-07-18 10:21:13,873:INFO:PyCaret optional dependencies:
2024-07-18 10:21:13,873:INFO:                shap: 0.44.1
2024-07-18 10:21:13,873:INFO:           interpret: 0.6.2
2024-07-18 10:21:13,873:INFO:                umap: 0.5.6
2024-07-18 10:21:13,874:INFO:     ydata_profiling: 4.9.0
2024-07-18 10:21:13,874:INFO:  explainerdashboard: 0.4.7
2024-07-18 10:21:13,874:INFO:             autoviz: Not installed
2024-07-18 10:21:13,874:INFO:           fairlearn: 0.7.0
2024-07-18 10:21:13,874:INFO:          deepchecks: Not installed
2024-07-18 10:21:13,874:INFO:             xgboost: 2.0.3
2024-07-18 10:21:13,874:INFO:            catboost: 1.2.5
2024-07-18 10:21:13,874:INFO:              kmodes: 0.12.2
2024-07-18 10:21:13,874:INFO:             mlxtend: 0.23.1
2024-07-18 10:21:13,874:INFO:       statsforecast: 1.5.0
2024-07-18 10:21:13,874:INFO:        tune_sklearn: 0.5.0
2024-07-18 10:21:13,874:INFO:                 ray: 2.20.0
2024-07-18 10:21:13,874:INFO:            hyperopt: 0.2.7
2024-07-18 10:21:13,874:INFO:              optuna: 3.6.1
2024-07-18 10:21:13,874:INFO:               skopt: 0.10.2
2024-07-18 10:21:13,874:INFO:              mlflow: 2.14.3
2024-07-18 10:21:13,874:INFO:              gradio: 4.38.1
2024-07-18 10:21:13,875:INFO:             fastapi: 0.111.1
2024-07-18 10:21:13,875:INFO:             uvicorn: 0.30.1
2024-07-18 10:21:13,875:INFO:              m2cgen: 0.10.0
2024-07-18 10:21:13,875:INFO:           evidently: 0.4.31
2024-07-18 10:21:13,875:INFO:               fugue: 0.8.7
2024-07-18 10:21:13,875:INFO:           streamlit: Not installed
2024-07-18 10:21:13,875:INFO:             prophet: Not installed
2024-07-18 10:21:13,875:INFO:None
2024-07-18 10:21:13,875:INFO:Set up data.
2024-07-18 10:21:13,913:INFO:Set up folding strategy.
2024-07-18 10:21:13,913:INFO:Set up train/test split.
2024-07-18 10:21:13,963:INFO:Set up index.
2024-07-18 10:21:13,964:INFO:Assigning column types.
2024-07-18 10:21:13,988:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-18 10:21:14,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-18 10:21:14,108:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 10:21:14,177:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:14,182:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:14,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-18 10:21:14,247:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 10:21:14,291:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:14,295:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:14,295:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-18 10:21:14,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 10:21:14,377:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:14,380:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:14,448:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-18 10:21:14,488:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:14,490:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:14,491:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-18 10:21:14,573:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:14,576:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:14,660:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:14,664:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:14,665:INFO:Preparing preprocessing pipeline...
2024-07-18 10:21:14,668:INFO:Set up label encoding.
2024-07-18 10:21:14,668:INFO:Set up simple imputation.
2024-07-18 10:21:14,668:INFO:Set up imbalanced handling.
2024-07-18 10:21:14,670:INFO:Set up column name cleaning.
2024-07-18 10:21:15,059:INFO:Finished creating preprocessing pipeline.
2024-07-18 10:21:15,068:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rajasa\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Delta Received Pa...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-18 10:21:15,068:INFO:Creating final display dataframe.
2024-07-18 10:21:15,654:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                Fix imbalance   
14         Fix imbalance method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                2974  
1                                               Label  
2                                          Multiclass  
3   Blackhole: 0, Diversion: 1, Overflow: 2, PortS...  
4                                         (33637, 18)  
5                                         (43337, 18)  
6                                         (33245, 18)  
7                                         (10092, 18)  
8                                                  17  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13  SMOTETomek(n_jobs=None, random_state=None, sam...  
14                                              SMOTE  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               e29a  
2024-07-18 10:21:15,778:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:15,782:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:15,885:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-18 10:21:15,889:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-18 10:21:15,890:INFO:setup() successfully completed in 2.03s...............
2024-07-18 10:21:23,811:INFO:Initializing compare_models()
2024-07-18 10:21:23,811:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-18 10:21:23,811:INFO:Checking exceptions
2024-07-18 10:21:23,824:INFO:Preparing display monitor
2024-07-18 10:21:23,852:INFO:Initializing Logistic Regression
2024-07-18 10:21:23,852:INFO:Total runtime is 0.0 minutes
2024-07-18 10:21:23,855:INFO:SubProcess create_model() called ==================================
2024-07-18 10:21:23,856:INFO:Initializing create_model()
2024-07-18 10:21:23,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:21:23,856:INFO:Checking exceptions
2024-07-18 10:21:23,856:INFO:Importing libraries
2024-07-18 10:21:23,856:INFO:Copying training dataset
2024-07-18 10:21:23,880:INFO:Defining folds
2024-07-18 10:21:23,880:INFO:Declaring metric variables
2024-07-18 10:21:23,884:INFO:Importing untrained model
2024-07-18 10:21:23,889:INFO:Logistic Regression Imported successfully
2024-07-18 10:21:23,896:INFO:Starting cross validation
2024-07-18 10:21:23,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:21:40,069:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:40,110:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:40,148:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,184:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,210:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,341:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:40,402:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:40,416:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,453:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,476:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,508:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:40,557:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:40,568:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,593:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,620:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,895:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:40,924:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:40,935:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,957:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:40,978:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,156:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:41,181:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:41,190:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,210:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,231:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,453:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:41,472:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:41,478:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,495:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,515:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,614:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:41,628:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:41,632:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:41,642:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,645:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:41,651:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,657:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,664:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,673:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:41,680:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,368:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:47,385:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:47,392:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,410:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,426:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,578:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-18 10:21:47,592:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:47,598:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,615:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,631:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:47,658:INFO:Calculating mean and std
2024-07-18 10:21:47,659:INFO:Creating metrics dataframe
2024-07-18 10:21:47,661:INFO:Uploading results into container
2024-07-18 10:21:47,662:INFO:Uploading model into container now
2024-07-18 10:21:47,662:INFO:_master_model_container: 1
2024-07-18 10:21:47,663:INFO:_display_container: 2
2024-07-18 10:21:47,664:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2974, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-18 10:21:47,664:INFO:create_model() successfully completed......................................
2024-07-18 10:21:47,818:INFO:SubProcess create_model() end ==================================
2024-07-18 10:21:47,818:INFO:Creating metrics dataframe
2024-07-18 10:21:47,825:INFO:Initializing K Neighbors Classifier
2024-07-18 10:21:47,825:INFO:Total runtime is 0.3995550195376078 minutes
2024-07-18 10:21:47,829:INFO:SubProcess create_model() called ==================================
2024-07-18 10:21:47,829:INFO:Initializing create_model()
2024-07-18 10:21:47,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:21:47,829:INFO:Checking exceptions
2024-07-18 10:21:47,829:INFO:Importing libraries
2024-07-18 10:21:47,829:INFO:Copying training dataset
2024-07-18 10:21:47,851:INFO:Defining folds
2024-07-18 10:21:47,851:INFO:Declaring metric variables
2024-07-18 10:21:47,855:INFO:Importing untrained model
2024-07-18 10:21:47,858:INFO:K Neighbors Classifier Imported successfully
2024-07-18 10:21:47,864:INFO:Starting cross validation
2024-07-18 10:21:47,866:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:21:49,747:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,770:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,771:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,776:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,790:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,791:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,797:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,801:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,812:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,819:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,821:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,841:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,940:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,961:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,962:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,980:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,982:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,983:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,994:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:49,998:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:50,002:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:50,013:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:50,014:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:50,030:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:50,992:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:51,004:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:51,005:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:51,015:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:51,017:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:51,029:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:51,057:INFO:Calculating mean and std
2024-07-18 10:21:51,057:INFO:Creating metrics dataframe
2024-07-18 10:21:51,059:INFO:Uploading results into container
2024-07-18 10:21:51,060:INFO:Uploading model into container now
2024-07-18 10:21:51,061:INFO:_master_model_container: 2
2024-07-18 10:21:51,061:INFO:_display_container: 2
2024-07-18 10:21:51,062:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-18 10:21:51,062:INFO:create_model() successfully completed......................................
2024-07-18 10:21:51,190:INFO:SubProcess create_model() end ==================================
2024-07-18 10:21:51,190:INFO:Creating metrics dataframe
2024-07-18 10:21:51,196:INFO:Initializing Naive Bayes
2024-07-18 10:21:51,196:INFO:Total runtime is 0.4557311375935872 minutes
2024-07-18 10:21:51,199:INFO:SubProcess create_model() called ==================================
2024-07-18 10:21:51,199:INFO:Initializing create_model()
2024-07-18 10:21:51,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:21:51,200:INFO:Checking exceptions
2024-07-18 10:21:51,200:INFO:Importing libraries
2024-07-18 10:21:51,200:INFO:Copying training dataset
2024-07-18 10:21:51,216:INFO:Defining folds
2024-07-18 10:21:51,217:INFO:Declaring metric variables
2024-07-18 10:21:51,220:INFO:Importing untrained model
2024-07-18 10:21:51,224:INFO:Naive Bayes Imported successfully
2024-07-18 10:21:51,230:INFO:Starting cross validation
2024-07-18 10:21:51,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:21:52,041:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,042:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,064:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,065:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,073:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,086:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,086:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,089:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,094:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,109:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,114:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,130:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,158:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,170:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,178:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,189:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,189:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,195:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,208:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,209:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,226:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,231:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,250:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,264:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,594:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,604:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,606:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,617:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,618:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,629:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:52,647:INFO:Calculating mean and std
2024-07-18 10:21:52,648:INFO:Creating metrics dataframe
2024-07-18 10:21:52,650:INFO:Uploading results into container
2024-07-18 10:21:52,650:INFO:Uploading model into container now
2024-07-18 10:21:52,651:INFO:_master_model_container: 3
2024-07-18 10:21:52,651:INFO:_display_container: 2
2024-07-18 10:21:52,651:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-18 10:21:52,651:INFO:create_model() successfully completed......................................
2024-07-18 10:21:52,792:INFO:SubProcess create_model() end ==================================
2024-07-18 10:21:52,792:INFO:Creating metrics dataframe
2024-07-18 10:21:52,801:INFO:Initializing Decision Tree Classifier
2024-07-18 10:21:52,801:INFO:Total runtime is 0.48248368104298905 minutes
2024-07-18 10:21:52,804:INFO:SubProcess create_model() called ==================================
2024-07-18 10:21:52,804:INFO:Initializing create_model()
2024-07-18 10:21:52,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:21:52,805:INFO:Checking exceptions
2024-07-18 10:21:52,805:INFO:Importing libraries
2024-07-18 10:21:52,805:INFO:Copying training dataset
2024-07-18 10:21:52,825:INFO:Defining folds
2024-07-18 10:21:52,825:INFO:Declaring metric variables
2024-07-18 10:21:52,828:INFO:Importing untrained model
2024-07-18 10:21:52,832:INFO:Decision Tree Classifier Imported successfully
2024-07-18 10:21:52,839:INFO:Starting cross validation
2024-07-18 10:21:52,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:21:54,163:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,185:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,186:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,190:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,206:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,206:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,210:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,210:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,225:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,229:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,231:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,256:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,321:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,341:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,357:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,362:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,382:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,396:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,400:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,408:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,410:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,422:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,425:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:54,434:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,138:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,149:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,150:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,161:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,162:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,178:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:55,205:INFO:Calculating mean and std
2024-07-18 10:21:55,206:INFO:Creating metrics dataframe
2024-07-18 10:21:55,207:INFO:Uploading results into container
2024-07-18 10:21:55,208:INFO:Uploading model into container now
2024-07-18 10:21:55,208:INFO:_master_model_container: 4
2024-07-18 10:21:55,208:INFO:_display_container: 2
2024-07-18 10:21:55,208:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2974, splitter='best')
2024-07-18 10:21:55,209:INFO:create_model() successfully completed......................................
2024-07-18 10:21:55,356:INFO:SubProcess create_model() end ==================================
2024-07-18 10:21:55,356:INFO:Creating metrics dataframe
2024-07-18 10:21:55,371:INFO:Initializing SVM - Linear Kernel
2024-07-18 10:21:55,371:INFO:Total runtime is 0.5253118594487508 minutes
2024-07-18 10:21:55,376:INFO:SubProcess create_model() called ==================================
2024-07-18 10:21:55,376:INFO:Initializing create_model()
2024-07-18 10:21:55,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:21:55,376:INFO:Checking exceptions
2024-07-18 10:21:55,376:INFO:Importing libraries
2024-07-18 10:21:55,376:INFO:Copying training dataset
2024-07-18 10:21:55,392:INFO:Defining folds
2024-07-18 10:21:55,393:INFO:Declaring metric variables
2024-07-18 10:21:55,395:INFO:Importing untrained model
2024-07-18 10:21:55,401:INFO:SVM - Linear Kernel Imported successfully
2024-07-18 10:21:55,407:INFO:Starting cross validation
2024-07-18 10:21:55,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:21:59,510:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:21:59,519:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:59,540:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:21:59,656:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:21:59,666:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,098:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:00,106:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,123:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:00,131:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,189:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,199:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:00,220:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,257:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,275:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,612:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:00,621:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,642:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,654:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:00,662:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,683:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:00,695:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,722:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,744:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,806:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:00,812:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,830:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,839:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:00,845:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,907:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:00,915:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,943:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:00,964:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:00,975:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:01,207:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:01,215:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:01,248:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:01,261:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:01,291:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,212:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:02,217:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,229:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,236:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:02,241:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,242:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:02,246:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,259:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,266:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:22:02,271:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:02,296:INFO:Calculating mean and std
2024-07-18 10:22:02,297:INFO:Creating metrics dataframe
2024-07-18 10:22:02,299:INFO:Uploading results into container
2024-07-18 10:22:02,299:INFO:Uploading model into container now
2024-07-18 10:22:02,300:INFO:_master_model_container: 5
2024-07-18 10:22:02,300:INFO:_display_container: 2
2024-07-18 10:22:02,301:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2974, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-18 10:22:02,301:INFO:create_model() successfully completed......................................
2024-07-18 10:22:02,428:INFO:SubProcess create_model() end ==================================
2024-07-18 10:22:02,429:INFO:Creating metrics dataframe
2024-07-18 10:22:02,436:INFO:Initializing Ridge Classifier
2024-07-18 10:22:02,436:INFO:Total runtime is 0.6430717428525289 minutes
2024-07-18 10:22:02,440:INFO:SubProcess create_model() called ==================================
2024-07-18 10:22:02,440:INFO:Initializing create_model()
2024-07-18 10:22:02,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:22:02,440:INFO:Checking exceptions
2024-07-18 10:22:02,440:INFO:Importing libraries
2024-07-18 10:22:02,441:INFO:Copying training dataset
2024-07-18 10:22:02,458:INFO:Defining folds
2024-07-18 10:22:02,459:INFO:Declaring metric variables
2024-07-18 10:22:02,462:INFO:Importing untrained model
2024-07-18 10:22:02,465:INFO:Ridge Classifier Imported successfully
2024-07-18 10:22:02,472:INFO:Starting cross validation
2024-07-18 10:22:02,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:22:03,235:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.57377e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 10:22:03,258:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.40462e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 10:22:03,258:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,267:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,284:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,291:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,294:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,294:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,303:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,312:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.4216e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 10:22:03,315:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,315:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,324:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,326:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,334:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,335:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,338:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,343:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,347:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,354:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,364:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,364:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,364:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,367:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,374:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,374:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,374:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,375:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,388:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,395:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,396:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,397:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,415:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,417:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,417:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,771:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.37046e-20): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-18 10:22:03,783:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,788:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,801:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,810:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:03,814:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,815:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,828:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,840:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:03,866:INFO:Calculating mean and std
2024-07-18 10:22:03,867:INFO:Creating metrics dataframe
2024-07-18 10:22:03,869:INFO:Uploading results into container
2024-07-18 10:22:03,869:INFO:Uploading model into container now
2024-07-18 10:22:03,870:INFO:_master_model_container: 6
2024-07-18 10:22:03,870:INFO:_display_container: 2
2024-07-18 10:22:03,871:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2974, solver='auto',
                tol=0.0001)
2024-07-18 10:22:03,871:INFO:create_model() successfully completed......................................
2024-07-18 10:22:03,999:INFO:SubProcess create_model() end ==================================
2024-07-18 10:22:03,999:INFO:Creating metrics dataframe
2024-07-18 10:22:04,006:INFO:Initializing Random Forest Classifier
2024-07-18 10:22:04,006:INFO:Total runtime is 0.6692363103230794 minutes
2024-07-18 10:22:04,009:INFO:SubProcess create_model() called ==================================
2024-07-18 10:22:04,009:INFO:Initializing create_model()
2024-07-18 10:22:04,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:22:04,009:INFO:Checking exceptions
2024-07-18 10:22:04,009:INFO:Importing libraries
2024-07-18 10:22:04,010:INFO:Copying training dataset
2024-07-18 10:22:04,025:INFO:Defining folds
2024-07-18 10:22:04,025:INFO:Declaring metric variables
2024-07-18 10:22:04,028:INFO:Importing untrained model
2024-07-18 10:22:04,034:INFO:Random Forest Classifier Imported successfully
2024-07-18 10:22:04,040:INFO:Starting cross validation
2024-07-18 10:22:04,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:22:16,849:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,865:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,869:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,880:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,884:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,885:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,888:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,891:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,907:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,910:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,912:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,914:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,915:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,916:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,930:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,937:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,940:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:16,944:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:17,040:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:17,074:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:17,097:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:17,102:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:17,124:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:17,148:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,552:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,562:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,565:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,574:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,577:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,586:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:20,608:INFO:Calculating mean and std
2024-07-18 10:22:20,609:INFO:Creating metrics dataframe
2024-07-18 10:22:20,611:INFO:Uploading results into container
2024-07-18 10:22:20,612:INFO:Uploading model into container now
2024-07-18 10:22:20,612:INFO:_master_model_container: 7
2024-07-18 10:22:20,612:INFO:_display_container: 2
2024-07-18 10:22:20,613:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2974, verbose=0,
                       warm_start=False)
2024-07-18 10:22:20,613:INFO:create_model() successfully completed......................................
2024-07-18 10:22:20,777:INFO:SubProcess create_model() end ==================================
2024-07-18 10:22:20,777:INFO:Creating metrics dataframe
2024-07-18 10:22:20,785:INFO:Initializing Quadratic Discriminant Analysis
2024-07-18 10:22:20,785:INFO:Total runtime is 0.9488762219746907 minutes
2024-07-18 10:22:20,788:INFO:SubProcess create_model() called ==================================
2024-07-18 10:22:20,789:INFO:Initializing create_model()
2024-07-18 10:22:20,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:22:20,789:INFO:Checking exceptions
2024-07-18 10:22:20,789:INFO:Importing libraries
2024-07-18 10:22:20,789:INFO:Copying training dataset
2024-07-18 10:22:20,809:INFO:Defining folds
2024-07-18 10:22:20,810:INFO:Declaring metric variables
2024-07-18 10:22:20,813:INFO:Importing untrained model
2024-07-18 10:22:20,818:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-18 10:22:20,828:INFO:Starting cross validation
2024-07-18 10:22:20,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:22:21,528:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,528:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,543:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,544:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,572:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,575:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,579:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,584:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,589:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,593:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,593:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,595:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,601:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,603:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,606:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,609:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,611:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:21,612:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,621:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,622:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,625:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,628:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,630:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,633:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,641:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,645:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,645:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,648:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,648:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,652:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:21,656:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,658:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,660:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,671:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,679:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,679:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,680:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,691:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,692:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:21,695:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,090:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:22,094:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-18 10:22:22,117:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:22,122:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:22,126:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,130:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,142:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,147:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,157:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,160:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:22,181:INFO:Calculating mean and std
2024-07-18 10:22:22,182:INFO:Creating metrics dataframe
2024-07-18 10:22:22,184:INFO:Uploading results into container
2024-07-18 10:22:22,184:INFO:Uploading model into container now
2024-07-18 10:22:22,184:INFO:_master_model_container: 8
2024-07-18 10:22:22,184:INFO:_display_container: 2
2024-07-18 10:22:22,185:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-18 10:22:22,185:INFO:create_model() successfully completed......................................
2024-07-18 10:22:22,319:INFO:SubProcess create_model() end ==================================
2024-07-18 10:22:22,319:INFO:Creating metrics dataframe
2024-07-18 10:22:22,326:INFO:Initializing Ada Boost Classifier
2024-07-18 10:22:22,326:INFO:Total runtime is 0.9745672146479288 minutes
2024-07-18 10:22:22,330:INFO:SubProcess create_model() called ==================================
2024-07-18 10:22:22,331:INFO:Initializing create_model()
2024-07-18 10:22:22,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:22:22,331:INFO:Checking exceptions
2024-07-18 10:22:22,331:INFO:Importing libraries
2024-07-18 10:22:22,331:INFO:Copying training dataset
2024-07-18 10:22:22,347:INFO:Defining folds
2024-07-18 10:22:22,347:INFO:Declaring metric variables
2024-07-18 10:22:22,351:INFO:Importing untrained model
2024-07-18 10:22:22,354:INFO:Ada Boost Classifier Imported successfully
2024-07-18 10:22:22,361:INFO:Starting cross validation
2024-07-18 10:22:22,362:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:22:23,025:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,047:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,076:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,086:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,092:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,093:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,093:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:23,098:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:26,659:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,664:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,668:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,672:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,688:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,690:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,694:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,696:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,711:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,716:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,735:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,737:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,742:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,754:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,775:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,796:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,849:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,857:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,861:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,870:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,876:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,889:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,894:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,905:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,934:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,940:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,945:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:26,952:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,953:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,966:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,966:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:26,984:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:27,210:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:27,215:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-18 10:22:29,753:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:29,756:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:22:29,757:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:29,760:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:29,769:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:29,772:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:29,781:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:29,784:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:22:29,811:INFO:Calculating mean and std
2024-07-18 10:22:29,811:INFO:Creating metrics dataframe
2024-07-18 10:22:29,813:INFO:Uploading results into container
2024-07-18 10:22:29,814:INFO:Uploading model into container now
2024-07-18 10:22:29,814:INFO:_master_model_container: 9
2024-07-18 10:22:29,814:INFO:_display_container: 2
2024-07-18 10:22:29,815:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2974)
2024-07-18 10:22:29,815:INFO:create_model() successfully completed......................................
2024-07-18 10:22:29,939:INFO:SubProcess create_model() end ==================================
2024-07-18 10:22:29,939:INFO:Creating metrics dataframe
2024-07-18 10:22:29,947:INFO:Initializing Gradient Boosting Classifier
2024-07-18 10:22:29,947:INFO:Total runtime is 1.1015802582105 minutes
2024-07-18 10:22:29,950:INFO:SubProcess create_model() called ==================================
2024-07-18 10:22:29,950:INFO:Initializing create_model()
2024-07-18 10:22:29,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:22:29,951:INFO:Checking exceptions
2024-07-18 10:22:29,951:INFO:Importing libraries
2024-07-18 10:22:29,951:INFO:Copying training dataset
2024-07-18 10:22:29,967:INFO:Defining folds
2024-07-18 10:22:29,967:INFO:Declaring metric variables
2024-07-18 10:22:29,971:INFO:Importing untrained model
2024-07-18 10:22:29,974:INFO:Gradient Boosting Classifier Imported successfully
2024-07-18 10:22:29,980:INFO:Starting cross validation
2024-07-18 10:22:29,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:23:42,714:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:42,723:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:42,755:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:42,776:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,048:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:43,056:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,066:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:43,076:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,077:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,095:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,095:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:43,097:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,103:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,115:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,125:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,144:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,179:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:43,188:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,206:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,224:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,254:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:43,262:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,283:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:43,303:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:44,464:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:44,471:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:44,491:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:44,507:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:44,670:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:23:44,677:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:44,690:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:23:44,704:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,671:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:33,676:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,689:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,701:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,897:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:33,902:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,914:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,926:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:33,947:INFO:Calculating mean and std
2024-07-18 10:24:33,948:INFO:Creating metrics dataframe
2024-07-18 10:24:33,950:INFO:Uploading results into container
2024-07-18 10:24:33,951:INFO:Uploading model into container now
2024-07-18 10:24:33,951:INFO:_master_model_container: 10
2024-07-18 10:24:33,951:INFO:_display_container: 2
2024-07-18 10:24:33,953:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2974, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-18 10:24:33,953:INFO:create_model() successfully completed......................................
2024-07-18 10:24:34,107:INFO:SubProcess create_model() end ==================================
2024-07-18 10:24:34,107:INFO:Creating metrics dataframe
2024-07-18 10:24:34,115:INFO:Initializing Linear Discriminant Analysis
2024-07-18 10:24:34,115:INFO:Total runtime is 3.1710528254508974 minutes
2024-07-18 10:24:34,120:INFO:SubProcess create_model() called ==================================
2024-07-18 10:24:34,120:INFO:Initializing create_model()
2024-07-18 10:24:34,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:24:34,120:INFO:Checking exceptions
2024-07-18 10:24:34,120:INFO:Importing libraries
2024-07-18 10:24:34,120:INFO:Copying training dataset
2024-07-18 10:24:34,137:INFO:Defining folds
2024-07-18 10:24:34,137:INFO:Declaring metric variables
2024-07-18 10:24:34,141:INFO:Importing untrained model
2024-07-18 10:24:34,144:INFO:Linear Discriminant Analysis Imported successfully
2024-07-18 10:24:34,152:INFO:Starting cross validation
2024-07-18 10:24:34,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:24:34,948:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:34,948:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:34,951:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:34,956:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:34,956:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,959:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,964:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,979:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,979:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,980:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,985:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:34,998:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,001:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,001:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,006:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,071:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:35,079:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,083:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:35,084:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:35,085:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:35,091:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,091:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,093:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,099:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,108:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,111:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,112:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,119:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,124:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,131:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,132:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,524:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:35,529:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,529:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-07-18 10:24:35,534:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,541:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,545:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,553:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,557:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:35,580:INFO:Calculating mean and std
2024-07-18 10:24:35,581:INFO:Creating metrics dataframe
2024-07-18 10:24:35,583:INFO:Uploading results into container
2024-07-18 10:24:35,583:INFO:Uploading model into container now
2024-07-18 10:24:35,584:INFO:_master_model_container: 11
2024-07-18 10:24:35,584:INFO:_display_container: 2
2024-07-18 10:24:35,585:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-18 10:24:35,585:INFO:create_model() successfully completed......................................
2024-07-18 10:24:35,707:INFO:SubProcess create_model() end ==================================
2024-07-18 10:24:35,709:INFO:Creating metrics dataframe
2024-07-18 10:24:35,716:INFO:Initializing Extra Trees Classifier
2024-07-18 10:24:35,716:INFO:Total runtime is 3.1977283239364627 minutes
2024-07-18 10:24:35,720:INFO:SubProcess create_model() called ==================================
2024-07-18 10:24:35,720:INFO:Initializing create_model()
2024-07-18 10:24:35,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:24:35,720:INFO:Checking exceptions
2024-07-18 10:24:35,720:INFO:Importing libraries
2024-07-18 10:24:35,721:INFO:Copying training dataset
2024-07-18 10:24:35,736:INFO:Defining folds
2024-07-18 10:24:35,736:INFO:Declaring metric variables
2024-07-18 10:24:35,739:INFO:Importing untrained model
2024-07-18 10:24:35,744:INFO:Extra Trees Classifier Imported successfully
2024-07-18 10:24:35,750:INFO:Starting cross validation
2024-07-18 10:24:35,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:24:41,210:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,219:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,227:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,252:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,262:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,276:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,279:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,295:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,306:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,318:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,322:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,326:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,329:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,331:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,332:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,344:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,351:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,357:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,362:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,370:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,376:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,389:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,406:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:41,424:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:42,975:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:42,988:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:42,989:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:43,008:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:43,009:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:43,021:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:43,048:INFO:Calculating mean and std
2024-07-18 10:24:43,049:INFO:Creating metrics dataframe
2024-07-18 10:24:43,051:INFO:Uploading results into container
2024-07-18 10:24:43,052:INFO:Uploading model into container now
2024-07-18 10:24:43,052:INFO:_master_model_container: 12
2024-07-18 10:24:43,053:INFO:_display_container: 2
2024-07-18 10:24:43,053:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2974, verbose=0,
                     warm_start=False)
2024-07-18 10:24:43,053:INFO:create_model() successfully completed......................................
2024-07-18 10:24:43,186:INFO:SubProcess create_model() end ==================================
2024-07-18 10:24:43,186:INFO:Creating metrics dataframe
2024-07-18 10:24:43,194:INFO:Initializing Extreme Gradient Boosting
2024-07-18 10:24:43,194:INFO:Total runtime is 3.322368689378103 minutes
2024-07-18 10:24:43,197:INFO:SubProcess create_model() called ==================================
2024-07-18 10:24:43,197:INFO:Initializing create_model()
2024-07-18 10:24:43,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:24:43,197:INFO:Checking exceptions
2024-07-18 10:24:43,197:INFO:Importing libraries
2024-07-18 10:24:43,197:INFO:Copying training dataset
2024-07-18 10:24:43,213:INFO:Defining folds
2024-07-18 10:24:43,214:INFO:Declaring metric variables
2024-07-18 10:24:43,216:INFO:Importing untrained model
2024-07-18 10:24:43,222:INFO:Extreme Gradient Boosting Imported successfully
2024-07-18 10:24:43,228:INFO:Starting cross validation
2024-07-18 10:24:43,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:24:47,923:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:47,943:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:47,963:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:47,974:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:47,985:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:47,994:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,010:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,016:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,032:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,045:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,065:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,086:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,149:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,167:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,167:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,177:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,186:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,187:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,194:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,195:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,204:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,213:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,214:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:48,231:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,815:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,825:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,828:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,837:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,840:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,849:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:50,869:INFO:Calculating mean and std
2024-07-18 10:24:50,870:INFO:Creating metrics dataframe
2024-07-18 10:24:50,871:INFO:Uploading results into container
2024-07-18 10:24:50,872:INFO:Uploading model into container now
2024-07-18 10:24:50,872:INFO:_master_model_container: 13
2024-07-18 10:24:50,872:INFO:_display_container: 2
2024-07-18 10:24:50,873:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-18 10:24:50,873:INFO:create_model() successfully completed......................................
2024-07-18 10:24:50,997:INFO:SubProcess create_model() end ==================================
2024-07-18 10:24:50,997:INFO:Creating metrics dataframe
2024-07-18 10:24:51,006:INFO:Initializing Light Gradient Boosting Machine
2024-07-18 10:24:51,007:INFO:Total runtime is 3.4525857686996466 minutes
2024-07-18 10:24:51,010:INFO:SubProcess create_model() called ==================================
2024-07-18 10:24:51,010:INFO:Initializing create_model()
2024-07-18 10:24:51,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:24:51,011:INFO:Checking exceptions
2024-07-18 10:24:51,011:INFO:Importing libraries
2024-07-18 10:24:51,011:INFO:Copying training dataset
2024-07-18 10:24:51,027:INFO:Defining folds
2024-07-18 10:24:51,027:INFO:Declaring metric variables
2024-07-18 10:24:51,030:INFO:Importing untrained model
2024-07-18 10:24:51,034:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-18 10:24:51,040:INFO:Starting cross validation
2024-07-18 10:24:51,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:24:57,471:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,491:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,516:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,627:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,647:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,668:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,714:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,735:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,755:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,872:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,891:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:57,912:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,658:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,678:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,698:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,699:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,727:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,748:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,786:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,807:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,827:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,853:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,872:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:24:58,890:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,449:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,467:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,486:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,610:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,627:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,644:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:25:00,675:INFO:Calculating mean and std
2024-07-18 10:25:00,676:INFO:Creating metrics dataframe
2024-07-18 10:25:00,678:INFO:Uploading results into container
2024-07-18 10:25:00,679:INFO:Uploading model into container now
2024-07-18 10:25:00,679:INFO:_master_model_container: 14
2024-07-18 10:25:00,679:INFO:_display_container: 2
2024-07-18 10:25:00,680:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2974, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-18 10:25:00,680:INFO:create_model() successfully completed......................................
2024-07-18 10:25:00,832:INFO:SubProcess create_model() end ==================================
2024-07-18 10:25:00,833:INFO:Creating metrics dataframe
2024-07-18 10:25:00,842:INFO:Initializing CatBoost Classifier
2024-07-18 10:25:00,842:INFO:Total runtime is 3.6164973258972175 minutes
2024-07-18 10:25:00,844:INFO:SubProcess create_model() called ==================================
2024-07-18 10:25:00,844:INFO:Initializing create_model()
2024-07-18 10:25:00,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:25:00,844:INFO:Checking exceptions
2024-07-18 10:25:00,844:INFO:Importing libraries
2024-07-18 10:25:00,844:INFO:Copying training dataset
2024-07-18 10:25:00,862:INFO:Defining folds
2024-07-18 10:25:00,862:INFO:Declaring metric variables
2024-07-18 10:25:00,865:INFO:Importing untrained model
2024-07-18 10:25:00,870:INFO:CatBoost Classifier Imported successfully
2024-07-18 10:25:00,878:INFO:Starting cross validation
2024-07-18 10:25:00,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:26:29,830:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:29,855:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:29,875:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:30,357:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:30,382:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:30,401:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,064:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,089:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,110:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,261:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,292:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,315:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,824:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,849:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:32,870:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,144:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,169:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,188:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,437:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,460:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,467:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,479:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,487:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:33,509:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,224:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,239:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,257:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,277:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,290:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,303:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:57,322:INFO:Calculating mean and std
2024-07-18 10:26:57,323:INFO:Creating metrics dataframe
2024-07-18 10:26:57,325:INFO:Uploading results into container
2024-07-18 10:26:57,325:INFO:Uploading model into container now
2024-07-18 10:26:57,326:INFO:_master_model_container: 15
2024-07-18 10:26:57,326:INFO:_display_container: 2
2024-07-18 10:26:57,326:INFO:<catboost.core.CatBoostClassifier object at 0x0000024253A7DD90>
2024-07-18 10:26:57,327:INFO:create_model() successfully completed......................................
2024-07-18 10:26:57,468:INFO:SubProcess create_model() end ==================================
2024-07-18 10:26:57,468:INFO:Creating metrics dataframe
2024-07-18 10:26:57,478:INFO:Initializing Dummy Classifier
2024-07-18 10:26:57,478:INFO:Total runtime is 5.560431579748791 minutes
2024-07-18 10:26:57,481:INFO:SubProcess create_model() called ==================================
2024-07-18 10:26:57,481:INFO:Initializing create_model()
2024-07-18 10:26:57,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024253EE69D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:26:57,482:INFO:Checking exceptions
2024-07-18 10:26:57,482:INFO:Importing libraries
2024-07-18 10:26:57,482:INFO:Copying training dataset
2024-07-18 10:26:57,498:INFO:Defining folds
2024-07-18 10:26:57,498:INFO:Declaring metric variables
2024-07-18 10:26:57,502:INFO:Importing untrained model
2024-07-18 10:26:57,507:INFO:Dummy Classifier Imported successfully
2024-07-18 10:26:57,514:INFO:Starting cross validation
2024-07-18 10:26:57,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-18 10:26:58,214:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,230:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,234:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,237:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,240:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,246:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,250:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,254:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,260:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,260:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,261:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,262:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,271:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,272:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,273:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,275:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,280:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,280:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,282:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,285:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,290:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,291:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,291:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,301:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,304:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,305:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,310:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,312:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,316:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,323:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,326:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,332:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,763:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,764:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,775:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,775:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,781:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,782:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-18 10:26:58,787:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,787:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:26:58,813:INFO:Calculating mean and std
2024-07-18 10:26:58,814:INFO:Creating metrics dataframe
2024-07-18 10:26:58,815:INFO:Uploading results into container
2024-07-18 10:26:58,816:INFO:Uploading model into container now
2024-07-18 10:26:58,816:INFO:_master_model_container: 16
2024-07-18 10:26:58,816:INFO:_display_container: 2
2024-07-18 10:26:58,816:INFO:DummyClassifier(constant=None, random_state=2974, strategy='prior')
2024-07-18 10:26:58,817:INFO:create_model() successfully completed......................................
2024-07-18 10:26:58,943:INFO:SubProcess create_model() end ==================================
2024-07-18 10:26:58,943:INFO:Creating metrics dataframe
2024-07-18 10:26:58,954:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-18 10:26:58,962:INFO:Initializing create_model()
2024-07-18 10:26:58,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-18 10:26:58,963:INFO:Checking exceptions
2024-07-18 10:26:58,964:INFO:Importing libraries
2024-07-18 10:26:58,964:INFO:Copying training dataset
2024-07-18 10:26:58,980:INFO:Defining folds
2024-07-18 10:26:58,980:INFO:Declaring metric variables
2024-07-18 10:26:58,980:INFO:Importing untrained model
2024-07-18 10:26:58,980:INFO:Declaring custom model
2024-07-18 10:26:58,982:INFO:Extreme Gradient Boosting Imported successfully
2024-07-18 10:26:58,984:INFO:Cross validation set to False
2024-07-18 10:26:58,984:INFO:Fitting Model
2024-07-18 10:27:00,224:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-07-18 10:27:00,224:INFO:create_model() successfully completed......................................
2024-07-18 10:27:00,400:INFO:_master_model_container: 16
2024-07-18 10:27:00,400:INFO:_display_container: 2
2024-07-18 10:27:00,401:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2024-07-18 10:27:00,401:INFO:compare_models() successfully completed......................................
2024-07-18 10:27:00,411:INFO:Initializing plot_model()
2024-07-18 10:27:00,412:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024248F449D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 10:27:00,412:INFO:Checking exceptions
2024-07-18 10:27:00,432:INFO:Preloading libraries
2024-07-18 10:27:00,463:INFO:Copying training dataset
2024-07-18 10:27:00,463:INFO:Plot type: pipeline
2024-07-18 10:27:00,647:INFO:Visual Rendered Successfully
2024-07-18 10:27:00,780:INFO:plot_model() successfully completed......................................
2024-07-18 10:27:00,833:INFO:Initializing evaluate_model()
2024-07-18 10:27:00,833:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-18 10:27:00,852:INFO:Initializing plot_model()
2024-07-18 10:27:00,852:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-18 10:27:00,852:INFO:Checking exceptions
2024-07-18 10:27:00,864:INFO:Preloading libraries
2024-07-18 10:27:00,887:INFO:Copying training dataset
2024-07-18 10:27:00,887:INFO:Plot type: pipeline
2024-07-18 10:27:01,044:INFO:Visual Rendered Successfully
2024-07-18 10:27:01,172:INFO:plot_model() successfully completed......................................
2024-07-18 10:27:01,195:INFO:Initializing plot_model()
2024-07-18 10:27:01,195:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 10:27:01,195:INFO:Checking exceptions
2024-07-18 10:27:01,204:INFO:Preloading libraries
2024-07-18 10:27:01,224:INFO:Copying training dataset
2024-07-18 10:27:01,225:INFO:Plot type: confusion_matrix
2024-07-18 10:27:01,364:INFO:Fitting Model
2024-07-18 10:27:01,365:INFO:Scoring test/hold-out set
2024-07-18 10:27:01,614:INFO:Visual Rendered Successfully
2024-07-18 10:27:01,741:INFO:plot_model() successfully completed......................................
2024-07-18 10:27:01,754:INFO:Initializing plot_model()
2024-07-18 10:27:01,754:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=learning, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 10:27:01,754:INFO:Checking exceptions
2024-07-18 10:27:01,762:INFO:Preloading libraries
2024-07-18 10:27:01,783:INFO:Copying training dataset
2024-07-18 10:27:01,783:INFO:Plot type: learning
2024-07-18 10:27:01,924:INFO:Fitting Model
2024-07-18 10:27:41,977:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\xgboost\core.py", line 730, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\xgboost\sklearn.py", line 1471, in fit
    raise ValueError(
ValueError: Invalid classes inferred from unique values of `y`.  Expected: [0 1 2 3], got [0 1 3 4]

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-07-18 10:27:42,186:INFO:Visual Rendered Successfully
2024-07-18 10:27:42,316:INFO:plot_model() successfully completed......................................
2024-07-18 10:27:42,335:INFO:Initializing plot_model()
2024-07-18 10:27:42,335:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-18 10:27:42,336:INFO:Checking exceptions
2024-07-18 10:27:42,347:INFO:Preloading libraries
2024-07-18 10:27:42,369:INFO:Copying training dataset
2024-07-18 10:27:42,369:INFO:Plot type: feature
2024-07-18 10:27:42,370:WARNING:No coef_ found. Trying feature_importances_
2024-07-18 10:27:42,557:INFO:Visual Rendered Successfully
2024-07-18 10:27:42,688:INFO:plot_model() successfully completed......................................
2024-07-18 10:27:42,702:INFO:Initializing predict_model()
2024-07-18 10:27:42,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000242501057D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000242224262A0>)
2024-07-18 10:27:42,702:INFO:Checking exceptions
2024-07-18 10:27:42,702:INFO:Preloading libraries
2024-07-18 10:27:42,902:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:27:42,960:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:27:43,008:WARNING:c:\Users\Rajasa\miniconda3\envs\env1\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'TCP-SYN') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-18 10:27:43,236:INFO:Initializing save_model()
2024-07-18 10:27:43,237:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), model_name=unr-idd_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rajasa\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Delta Received Pa...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-18 10:27:43,237:INFO:Adding model into prep_pipe
2024-07-18 10:27:43,253:INFO:unr-idd_best_model.pkl saved in current working directory
2024-07-18 10:27:43,289:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Received Packets',
                                             'Received Bytes', 'Sent Bytes',
                                             'Sent Packets',
                                             'Port alive Duration (S)',
                                             'Delta Received Packets',
                                             'Delta Received Bytes',
                                             'Delta Sent Byt...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2024-07-18 10:27:43,289:INFO:save_model() successfully completed......................................
2024-07-18 10:27:43,457:INFO:Initializing load_model()
2024-07-18 10:27:43,457:INFO:load_model(model_name=unr-idd_best_model, platform=None, authentication=None, verbose=True)
2024-07-19 06:51:24,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 06:51:24,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 06:51:24,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 06:51:24,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 10:52:33,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 10:52:33,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 10:52:33,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 10:52:33,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 10:55:10,567:WARNING:C:\Users\Rajasa\AppData\Local\Temp\ipykernel_9836\1075865206.py:2: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.countplot(data=data, x="Binary Label", palette="husl")

2024-07-19 10:56:32,283:WARNING:C:\Users\Rajasa\AppData\Local\Temp\ipykernel_9836\3545273045.py:2: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.countplot(data=data, x="Label", palette="husl")

